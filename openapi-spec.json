{
  "openapi": "3.0.0",
  "paths": {
    "/api/employees": {
      "post": {
        "operationId": "EmployeesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEmployeeDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Funcionário criado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos."
          },
          "409": {
            "description": "CPF ou email já existem."
          }
        },
        "summary": "Criar novo funcionário",
        "tags": [
          "Funcionários"
        ]
      },
      "get": {
        "operationId": "EmployeesController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de funcionários retornada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Employee"
                  }
                }
              }
            }
          }
        },
        "summary": "Listar todos os funcionários",
        "tags": [
          "Funcionários"
        ]
      }
    },
    "/api/employees/{id}": {
      "get": {
        "operationId": "EmployeesController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do funcionário",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Funcionário encontrado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            }
          },
          "404": {
            "description": "Funcionário não encontrado."
          }
        },
        "summary": "Buscar funcionário por ID",
        "tags": [
          "Funcionários"
        ]
      },
      "patch": {
        "operationId": "EmployeesController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do funcionário",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEmployeeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Funcionário atualizado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            }
          },
          "404": {
            "description": "Funcionário não encontrado."
          },
          "409": {
            "description": "Email já existe."
          }
        },
        "summary": "Atualizar funcionário",
        "tags": [
          "Funcionários"
        ]
      },
      "delete": {
        "operationId": "EmployeesController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do funcionário",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Funcionário removido com sucesso."
          },
          "404": {
            "description": "Funcionário não encontrado."
          }
        },
        "summary": "Remover funcionário",
        "tags": [
          "Funcionários"
        ]
      }
    },
    "/api/employees/departments/active": {
      "get": {
        "operationId": "EmployeesController_getActiveDepartments",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de departamentos ativos."
          }
        },
        "summary": "Listar departamentos ativos para seleção",
        "tags": [
          "Funcionários"
        ]
      }
    },
    "/api/employees/positions/active": {
      "get": {
        "operationId": "EmployeesController_getActivePositions",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de cargos ativos."
          }
        },
        "summary": "Listar cargos ativos para seleção",
        "tags": [
          "Funcionários"
        ]
      }
    },
    "/api/employees/positions/by-department/{departmentId}": {
      "get": {
        "operationId": "EmployeesController_getPositionsByDepartment",
        "parameters": [
          {
            "name": "departmentId",
            "required": true,
            "in": "path",
            "description": "ID do departamento",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de cargos do departamento."
          }
        },
        "summary": "Listar cargos ativos por departamento",
        "tags": [
          "Funcionários"
        ]
      }
    },
    "/api/employees/cities/active": {
      "get": {
        "operationId": "EmployeesController_getActiveCities",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de cidades ativas."
          }
        },
        "summary": "Listar cidades ativas para seleção",
        "tags": [
          "Funcionários"
        ]
      }
    },
    "/api/departments": {
      "post": {
        "operationId": "DepartmentsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDepartmentDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Departamento criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              }
            }
          },
          "400": {
            "description": "Dados de entrada inválidos"
          },
          "409": {
            "description": "Departamento com mesmo nome já existe"
          }
        },
        "summary": "Criar novo departamento",
        "tags": [
          "Departments"
        ]
      },
      "get": {
        "operationId": "DepartmentsController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de departamentos retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Department"
                  }
                }
              }
            }
          }
        },
        "summary": "Listar todos os departamentos",
        "tags": [
          "Departments"
        ]
      }
    },
    "/api/departments/{id}": {
      "get": {
        "operationId": "DepartmentsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do departamento",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Departamento encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              }
            }
          },
          "404": {
            "description": "Departamento não encontrado"
          }
        },
        "summary": "Buscar departamento por ID",
        "tags": [
          "Departments"
        ]
      },
      "patch": {
        "operationId": "DepartmentsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do departamento",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDepartmentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Departamento atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              }
            }
          },
          "400": {
            "description": "Dados de entrada inválidos"
          },
          "404": {
            "description": "Departamento não encontrado"
          }
        },
        "summary": "Atualizar departamento por ID",
        "tags": [
          "Departments"
        ]
      },
      "delete": {
        "operationId": "DepartmentsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do departamento",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Departamento removido com sucesso"
          },
          "404": {
            "description": "Departamento não encontrado"
          },
          "409": {
            "description": "Departamento está sendo usado por funcionários"
          }
        },
        "summary": "Remover departamento por ID",
        "tags": [
          "Departments"
        ]
      }
    },
    "/api/positions": {
      "post": {
        "operationId": "PositionsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePositionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Cargo criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Position"
                }
              }
            }
          },
          "400": {
            "description": "Dados de entrada inválidos"
          },
          "409": {
            "description": "Cargo com mesmo nome já existe"
          }
        },
        "summary": "Criar novo cargo",
        "tags": [
          "Positions"
        ]
      },
      "get": {
        "operationId": "PositionsController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de cargos retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Position"
                  }
                }
              }
            }
          }
        },
        "summary": "Listar todos os cargos",
        "tags": [
          "Positions"
        ]
      }
    },
    "/api/positions/{id}": {
      "get": {
        "operationId": "PositionsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do cargo",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cargo encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Position"
                }
              }
            }
          },
          "404": {
            "description": "Cargo não encontrado"
          }
        },
        "summary": "Buscar cargo por ID",
        "tags": [
          "Positions"
        ]
      },
      "patch": {
        "operationId": "PositionsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do cargo",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePositionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cargo atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Position"
                }
              }
            }
          },
          "400": {
            "description": "Dados de entrada inválidos"
          },
          "404": {
            "description": "Cargo não encontrado"
          }
        },
        "summary": "Atualizar cargo por ID",
        "tags": [
          "Positions"
        ]
      },
      "delete": {
        "operationId": "PositionsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do cargo",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Cargo removido com sucesso"
          },
          "404": {
            "description": "Cargo não encontrado"
          },
          "409": {
            "description": "Cargo está sendo usado por funcionários"
          }
        },
        "summary": "Remover cargo por ID",
        "tags": [
          "Positions"
        ]
      }
    },
    "/api/positions/department/{departmentId}": {
      "get": {
        "operationId": "PositionsController_findByDepartment",
        "parameters": [
          {
            "name": "departmentId",
            "required": true,
            "in": "path",
            "description": "ID do departamento",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cargos do departamento encontrados",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Position"
                  }
                }
              }
            }
          }
        },
        "summary": "Buscar cargos por departamento",
        "tags": [
          "Positions"
        ]
      }
    },
    "/api/cities": {
      "post": {
        "operationId": "CitiesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCityDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Cidade criada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/City"
                }
              }
            }
          },
          "400": {
            "description": "Dados de entrada inválidos"
          },
          "404": {
            "description": "Estado não encontrado"
          },
          "409": {
            "description": "Cidade com mesmo nome ou código IBGE já existe"
          }
        },
        "summary": "Criar nova cidade",
        "tags": [
          "Cities"
        ]
      },
      "get": {
        "operationId": "CitiesController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de cidades retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/City"
                  }
                }
              }
            }
          }
        },
        "summary": "Listar todas as cidades",
        "tags": [
          "Cities"
        ]
      }
    },
    "/api/cities/estado/{estadoId}": {
      "get": {
        "operationId": "CitiesController_findByEstado",
        "parameters": [
          {
            "name": "estadoId",
            "required": true,
            "in": "path",
            "description": "ID do estado",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de cidades do estado retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/City"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Estado não encontrado"
          }
        },
        "summary": "Listar cidades por estado",
        "tags": [
          "Cities"
        ]
      }
    },
    "/api/cities/ibge/{codigoIbge}": {
      "get": {
        "operationId": "CitiesController_findByIbgeCode",
        "parameters": [
          {
            "name": "codigoIbge",
            "required": true,
            "in": "path",
            "description": "Código IBGE da cidade",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cidade encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/City"
                }
              }
            }
          },
          "404": {
            "description": "Cidade não encontrada"
          }
        },
        "summary": "Obter cidade por código IBGE",
        "tags": [
          "Cities"
        ]
      }
    },
    "/api/cities/{id}": {
      "get": {
        "operationId": "CitiesController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID da cidade",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cidade encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/City"
                }
              }
            }
          },
          "404": {
            "description": "Cidade não encontrada"
          }
        },
        "summary": "Obter cidade por ID",
        "tags": [
          "Cities"
        ]
      },
      "patch": {
        "operationId": "CitiesController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID da cidade",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCityDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cidade atualizada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/City"
                }
              }
            }
          },
          "400": {
            "description": "Dados de entrada inválidos"
          },
          "404": {
            "description": "Cidade não encontrada"
          },
          "409": {
            "description": "Cidade com mesmo nome ou código IBGE já existe"
          }
        },
        "summary": "Atualizar cidade por ID",
        "tags": [
          "Cities"
        ]
      },
      "delete": {
        "operationId": "CitiesController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID da cidade",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Cidade removida com sucesso"
          },
          "404": {
            "description": "Cidade não encontrada"
          },
          "409": {
            "description": "Não é possível excluir a cidade pois ela está sendo referenciada"
          }
        },
        "summary": "Remover cidade por ID",
        "tags": [
          "Cities"
        ]
      }
    },
    "/api/customers": {
      "post": {
        "operationId": "CustomersController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Cliente criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "400": {
            "description": "Dados de entrada inválidos"
          },
          "409": {
            "description": "Cliente com mesmo CNPJ/CPF já existe"
          }
        },
        "summary": "Criar novo cliente",
        "tags": [
          "Customers"
        ]
      },
      "get": {
        "operationId": "CustomersController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de clientes retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Customer"
                  }
                }
              }
            }
          }
        },
        "summary": "Listar todos os clientes",
        "tags": [
          "Customers"
        ]
      }
    },
    "/api/customers/{id}": {
      "get": {
        "operationId": "CustomersController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do cliente (número)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cliente encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "404": {
            "description": "Cliente não encontrado"
          }
        },
        "summary": "Obter cliente por ID",
        "tags": [
          "Customers"
        ]
      },
      "patch": {
        "operationId": "CustomersController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do cliente (número)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomerDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cliente atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "400": {
            "description": "Dados de entrada inválidos"
          },
          "404": {
            "description": "Cliente não encontrado"
          }
        },
        "summary": "Atualizar cliente por ID",
        "tags": [
          "Customers"
        ]
      },
      "delete": {
        "operationId": "CustomersController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do cliente (número)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Cliente removido com sucesso"
          },
          "404": {
            "description": "Cliente não encontrado"
          }
        },
        "summary": "Remover cliente por ID",
        "tags": [
          "Customers"
        ]
      }
    },
    "/api/customers/by-document/{cnpjCpf}": {
      "get": {
        "operationId": "CustomersController_findByDocument",
        "parameters": [
          {
            "name": "cnpjCpf",
            "required": true,
            "in": "path",
            "description": "CNPJ/CPF do cliente",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cliente encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "404": {
            "description": "Cliente não encontrado"
          }
        },
        "summary": "Obter cliente por CNPJ/CPF",
        "tags": [
          "Customers"
        ]
      }
    },
    "/api/countries": {
      "post": {
        "operationId": "CountriesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCountryDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "País criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Country"
                }
              }
            }
          },
          "400": {
            "description": "Dados de entrada inválidos"
          },
          "409": {
            "description": "País com mesmo código ou sigla já existe"
          }
        },
        "summary": "Criar novo país",
        "tags": [
          "Countries"
        ]
      },
      "get": {
        "operationId": "CountriesController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de países retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                }
              }
            }
          }
        },
        "summary": "Listar todos os países",
        "tags": [
          "Countries"
        ]
      }
    },
    "/api/countries/code/{code}": {
      "get": {
        "operationId": "CountriesController_findByCode",
        "parameters": [
          {
            "name": "code",
            "required": true,
            "in": "path",
            "description": "Código do país",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "País encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Country"
                }
              }
            }
          },
          "404": {
            "description": "País não encontrado"
          }
        },
        "summary": "Obter país por código",
        "tags": [
          "Countries"
        ]
      }
    },
    "/api/countries/sigla/{sigla}": {
      "get": {
        "operationId": "CountriesController_findBySigla",
        "parameters": [
          {
            "name": "sigla",
            "required": true,
            "in": "path",
            "description": "Sigla do país",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "País encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Country"
                }
              }
            }
          },
          "404": {
            "description": "País não encontrado"
          }
        },
        "summary": "Obter país por sigla",
        "tags": [
          "Countries"
        ]
      }
    },
    "/api/countries/{id}": {
      "get": {
        "operationId": "CountriesController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do país",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "País encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Country"
                }
              }
            }
          },
          "404": {
            "description": "País não encontrado"
          }
        },
        "summary": "Obter país por ID",
        "tags": [
          "Countries"
        ]
      },
      "patch": {
        "operationId": "CountriesController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do país",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCountryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "País atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Country"
                }
              }
            }
          },
          "400": {
            "description": "Dados de entrada inválidos"
          },
          "404": {
            "description": "País não encontrado"
          },
          "409": {
            "description": "País com mesmo código ou sigla já existe"
          }
        },
        "summary": "Atualizar país por ID",
        "tags": [
          "Countries"
        ]
      },
      "delete": {
        "operationId": "CountriesController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do país",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "País removido com sucesso"
          },
          "404": {
            "description": "País não encontrado"
          },
          "409": {
            "description": "Não é possível excluir o país pois ele possui estados vinculados"
          }
        },
        "summary": "Remover país por ID",
        "tags": [
          "Countries"
        ]
      }
    },
    "/api/states": {
      "post": {
        "operationId": "StatesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Estado criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/State"
                }
              }
            }
          },
          "400": {
            "description": "Dados de entrada inválidos"
          },
          "404": {
            "description": "País não encontrado"
          },
          "409": {
            "description": "Estado com mesma UF já existe para o país informado"
          }
        },
        "summary": "Criar novo estado",
        "tags": [
          "States"
        ]
      },
      "get": {
        "operationId": "StatesController_findAll",
        "parameters": [
          {
            "name": "paisId",
            "required": false,
            "in": "query",
            "description": "Filtrar estados por país",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de estados retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/State"
                  }
                }
              }
            }
          }
        },
        "summary": "Listar todos os estados",
        "tags": [
          "States"
        ]
      }
    },
    "/api/states/uf/{uf}/pais/{paisId}": {
      "get": {
        "operationId": "StatesController_findByUf",
        "parameters": [
          {
            "name": "uf",
            "required": true,
            "in": "path",
            "description": "UF do estado",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paisId",
            "required": true,
            "in": "path",
            "description": "ID do país",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Estado encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/State"
                }
              }
            }
          },
          "404": {
            "description": "Estado não encontrado"
          }
        },
        "summary": "Obter estado por UF e país",
        "tags": [
          "States"
        ]
      }
    },
    "/api/states/{id}": {
      "get": {
        "operationId": "StatesController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do estado",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Estado encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/State"
                }
              }
            }
          },
          "404": {
            "description": "Estado não encontrado"
          }
        },
        "summary": "Obter estado por ID",
        "tags": [
          "States"
        ]
      },
      "patch": {
        "operationId": "StatesController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do estado",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Estado atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/State"
                }
              }
            }
          },
          "400": {
            "description": "Dados de entrada inválidos"
          },
          "404": {
            "description": "Estado não encontrado"
          },
          "409": {
            "description": "Estado com mesma UF já existe para o país informado"
          }
        },
        "summary": "Atualizar estado por ID",
        "tags": [
          "States"
        ]
      },
      "delete": {
        "operationId": "StatesController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do estado",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Estado removido com sucesso"
          },
          "404": {
            "description": "Estado não encontrado"
          },
          "409": {
            "description": "Não é possível excluir o estado pois ele possui cidades vinculadas"
          }
        },
        "summary": "Remover estado por ID",
        "tags": [
          "States"
        ]
      }
    },
    "/api/payment-methods": {
      "post": {
        "operationId": "PaymentMethodsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentMethodDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The payment method has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data provided."
          }
        },
        "summary": "Create a new payment method",
        "tags": [
          "payment-methods"
        ]
      },
      "get": {
        "operationId": "PaymentMethodsController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns all payment methods",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentMethod"
                  }
                }
              }
            }
          }
        },
        "summary": "Get all payment methods",
        "tags": [
          "payment-methods"
        ]
      }
    },
    "/api/payment-methods/{id}": {
      "get": {
        "operationId": "PaymentMethodsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Payment method ID (número)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the payment method",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              }
            }
          },
          "404": {
            "description": "Payment method not found"
          }
        },
        "summary": "Get a payment method by ID",
        "tags": [
          "payment-methods"
        ]
      },
      "patch": {
        "operationId": "PaymentMethodsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Payment method ID (número)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePaymentMethodDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The payment method has been successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data provided"
          },
          "404": {
            "description": "Payment method not found"
          }
        },
        "summary": "Update a payment method",
        "tags": [
          "payment-methods"
        ]
      },
      "delete": {
        "operationId": "PaymentMethodsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Payment method ID (número)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The payment method has been successfully deleted or inactivated"
          },
          "404": {
            "description": "Payment method not found"
          }
        },
        "summary": "Delete a payment method or mark as inactive if in use",
        "tags": [
          "payment-methods"
        ]
      }
    },
    "/api/payment-terms": {
      "post": {
        "operationId": "PaymentTermsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentTermDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "PaymentTerms"
        ]
      },
      "get": {
        "operationId": "PaymentTermsController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "PaymentTerms"
        ]
      }
    },
    "/api/payment-terms/{id}": {
      "get": {
        "operationId": "PaymentTermsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "PaymentTerms"
        ]
      },
      "patch": {
        "operationId": "PaymentTermsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePaymentTermDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "PaymentTerms"
        ]
      },
      "delete": {
        "operationId": "PaymentTermsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "PaymentTerms"
        ]
      }
    },
    "/api/suppliers": {
      "post": {
        "operationId": "SuppliersController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSupplierDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Fornecedor criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier"
                }
              }
            }
          },
          "400": {
            "description": "Dados de entrada inválidos"
          },
          "409": {
            "description": "Fornecedor com mesmo CNPJ/CPF já existe"
          }
        },
        "summary": "Criar novo fornecedor",
        "tags": [
          "Suppliers"
        ]
      },
      "get": {
        "operationId": "SuppliersController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de fornecedores retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Supplier"
                  }
                }
              }
            }
          }
        },
        "summary": "Listar todos os fornecedores",
        "tags": [
          "Suppliers"
        ]
      }
    },
    "/api/suppliers/{id}": {
      "get": {
        "operationId": "SuppliersController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do fornecedor",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Fornecedor encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier"
                }
              }
            }
          },
          "404": {
            "description": "Fornecedor não encontrado"
          }
        },
        "summary": "Obter fornecedor por ID",
        "tags": [
          "Suppliers"
        ]
      },
      "patch": {
        "operationId": "SuppliersController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do fornecedor",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSupplierDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Fornecedor atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier"
                }
              }
            }
          },
          "400": {
            "description": "Dados de entrada inválidos"
          },
          "404": {
            "description": "Fornecedor não encontrado"
          }
        },
        "summary": "Atualizar fornecedor por ID",
        "tags": [
          "Suppliers"
        ]
      },
      "delete": {
        "operationId": "SuppliersController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do fornecedor",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Fornecedor removido com sucesso"
          },
          "404": {
            "description": "Fornecedor não encontrado"
          }
        },
        "summary": "Remover fornecedor por ID",
        "tags": [
          "Suppliers"
        ]
      }
    },
    "/api/suppliers/by-document/{cnpjCpf}": {
      "get": {
        "operationId": "SuppliersController_findByDocument",
        "parameters": [
          {
            "name": "cnpjCpf",
            "required": true,
            "in": "path",
            "description": "CNPJ/CPF do fornecedor",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Fornecedor encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier"
                }
              }
            }
          },
          "404": {
            "description": "Fornecedor não encontrado"
          }
        },
        "summary": "Obter fornecedor por CNPJ/CPF",
        "tags": [
          "Suppliers"
        ]
      }
    },
    "/api/products": {
      "post": {
        "operationId": "ProductsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Produto criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Dados de entrada inválidos"
          },
          "409": {
            "description": "Produto com mesmo código já existe"
          }
        },
        "summary": "Criar novo produto",
        "tags": [
          "Products"
        ]
      },
      "get": {
        "operationId": "ProductsController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de produtos retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          }
        },
        "summary": "Listar todos os produtos",
        "tags": [
          "Products"
        ]
      }
    },
    "/api/products/{id}": {
      "get": {
        "operationId": "ProductsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do produto",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Produto encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "404": {
            "description": "Produto não encontrado"
          }
        },
        "summary": "Obter produto por ID",
        "tags": [
          "Products"
        ]
      },
      "patch": {
        "operationId": "ProductsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do produto",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Produto atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Dados de entrada inválidos"
          },
          "404": {
            "description": "Produto não encontrado"
          },
          "409": {
            "description": "Código já está sendo usado por outro produto"
          }
        },
        "summary": "Atualizar produto",
        "tags": [
          "Products"
        ]
      },
      "delete": {
        "operationId": "ProductsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do produto",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Produto removido com sucesso"
          },
          "404": {
            "description": "Produto não encontrado"
          }
        },
        "summary": "Remover produto (soft delete)",
        "tags": [
          "Products"
        ]
      }
    },
    "/api/categories": {
      "post": {
        "operationId": "CategoriesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoryDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Categoria criada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "400": {
            "description": "Dados de entrada inválidos"
          },
          "409": {
            "description": "Categoria com mesmo nome já existe"
          }
        },
        "summary": "Criar nova categoria",
        "tags": [
          "Categories"
        ]
      },
      "get": {
        "operationId": "CategoriesController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de categorias retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          }
        },
        "summary": "Listar todas as categorias",
        "tags": [
          "Categories"
        ]
      }
    },
    "/api/categories/{id}": {
      "get": {
        "operationId": "CategoriesController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID da categoria",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Categoria encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "404": {
            "description": "Categoria não encontrada"
          }
        },
        "summary": "Obter categoria por ID",
        "tags": [
          "Categories"
        ]
      },
      "patch": {
        "operationId": "CategoriesController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID da categoria",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Categoria atualizada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "400": {
            "description": "Dados de entrada inválidos"
          },
          "404": {
            "description": "Categoria não encontrada"
          },
          "409": {
            "description": "Nome já está sendo usado por outra categoria"
          }
        },
        "summary": "Atualizar categoria",
        "tags": [
          "Categories"
        ]
      },
      "delete": {
        "operationId": "CategoriesController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID da categoria",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Categoria removida com sucesso"
          },
          "404": {
            "description": "Categoria não encontrada"
          },
          "409": {
            "description": "Categoria está sendo usada por produtos ativos"
          }
        },
        "summary": "Remover categoria (soft delete)",
        "tags": [
          "Categories"
        ]
      }
    },
    "/api/brands": {
      "post": {
        "operationId": "BrandsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBrandDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Marca criada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Brand"
                }
              }
            }
          },
          "400": {
            "description": "Dados de entrada inválidos"
          },
          "409": {
            "description": "Marca com mesmo nome já existe"
          }
        },
        "summary": "Criar nova marca",
        "tags": [
          "Brands"
        ]
      },
      "get": {
        "operationId": "BrandsController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de marcas retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Brand"
                  }
                }
              }
            }
          }
        },
        "summary": "Listar todas as marcas",
        "tags": [
          "Brands"
        ]
      }
    },
    "/api/brands/{id}": {
      "get": {
        "operationId": "BrandsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID da marca",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Marca encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Brand"
                }
              }
            }
          },
          "404": {
            "description": "Marca não encontrada"
          }
        },
        "summary": "Obter marca por ID",
        "tags": [
          "Brands"
        ]
      },
      "patch": {
        "operationId": "BrandsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID da marca",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBrandDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Marca atualizada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Brand"
                }
              }
            }
          },
          "400": {
            "description": "Dados de entrada inválidos"
          },
          "404": {
            "description": "Marca não encontrada"
          },
          "409": {
            "description": "Nome já está sendo usado por outra marca"
          }
        },
        "summary": "Atualizar marca",
        "tags": [
          "Brands"
        ]
      },
      "delete": {
        "operationId": "BrandsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID da marca",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Marca removida com sucesso"
          },
          "404": {
            "description": "Marca não encontrada"
          },
          "409": {
            "description": "Marca está sendo usada por produtos ativos"
          }
        },
        "summary": "Remover marca (soft delete)",
        "tags": [
          "Brands"
        ]
      }
    },
    "/api/unit-measures": {
      "post": {
        "operationId": "UnitMeasuresController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUnitMeasureDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Unidade de medida criada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitMeasure"
                }
              }
            }
          },
          "400": {
            "description": "Dados de entrada inválidos"
          },
          "409": {
            "description": "Unidade de medida com mesma sigla já existe"
          }
        },
        "summary": "Criar nova unidade de medida",
        "tags": [
          "Unit Measures"
        ]
      },
      "get": {
        "operationId": "UnitMeasuresController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de unidades de medida retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnitMeasure"
                  }
                }
              }
            }
          }
        },
        "summary": "Listar todas as unidades de medida",
        "tags": [
          "Unit Measures"
        ]
      }
    },
    "/api/unit-measures/{id}": {
      "get": {
        "operationId": "UnitMeasuresController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID da unidade de medida",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Unidade de medida encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitMeasure"
                }
              }
            }
          },
          "404": {
            "description": "Unidade de medida não encontrada"
          }
        },
        "summary": "Obter unidade de medida por ID",
        "tags": [
          "Unit Measures"
        ]
      },
      "patch": {
        "operationId": "UnitMeasuresController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID da unidade de medida",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUnitMeasureDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Unidade de medida atualizada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitMeasure"
                }
              }
            }
          },
          "400": {
            "description": "Dados de entrada inválidos"
          },
          "404": {
            "description": "Unidade de medida não encontrada"
          },
          "409": {
            "description": "Sigla já está sendo usada por outra unidade de medida"
          }
        },
        "summary": "Atualizar unidade de medida",
        "tags": [
          "Unit Measures"
        ]
      },
      "delete": {
        "operationId": "UnitMeasuresController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID da unidade de medida",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Unidade de medida removida com sucesso"
          },
          "404": {
            "description": "Unidade de medida não encontrada"
          },
          "409": {
            "description": "Unidade de medida está sendo usada por produtos ativos"
          }
        },
        "summary": "Remover unidade de medida (soft delete)",
        "tags": [
          "Unit Measures"
        ]
      }
    },
    "/api/employee-functions": {
      "post": {
        "operationId": "EmployeeFunctionsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEmployeeFunctionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Função criada com sucesso."
          },
          "400": {
            "description": "Dados inválidos."
          }
        },
        "summary": "Criar nova função de funcionário",
        "tags": [
          "employee-functions"
        ]
      },
      "get": {
        "operationId": "EmployeeFunctionsController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de funções retornada com sucesso."
          }
        },
        "summary": "Listar todas as funções de funcionários",
        "tags": [
          "employee-functions"
        ]
      }
    },
    "/api/employee-functions/{id}": {
      "get": {
        "operationId": "EmployeeFunctionsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Função encontrada."
          },
          "404": {
            "description": "Função não encontrada."
          }
        },
        "summary": "Buscar função por ID",
        "tags": [
          "employee-functions"
        ]
      },
      "patch": {
        "operationId": "EmployeeFunctionsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEmployeeFunctionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Função atualizada com sucesso."
          },
          "404": {
            "description": "Função não encontrada."
          }
        },
        "summary": "Atualizar função",
        "tags": [
          "employee-functions"
        ]
      },
      "delete": {
        "operationId": "EmployeeFunctionsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Função deletada com sucesso."
          },
          "404": {
            "description": "Função não encontrada."
          }
        },
        "summary": "Deletar função",
        "tags": [
          "employee-functions"
        ]
      }
    },
    "/api/transporters": {
      "post": {
        "operationId": "TransportersController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransporterDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Transportadora criada com sucesso."
          },
          "400": {
            "description": "Dados inválidos."
          }
        },
        "summary": "Criar nova transportadora",
        "tags": [
          "transporters"
        ]
      },
      "get": {
        "operationId": "TransportersController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de transportadoras retornada com sucesso."
          }
        },
        "summary": "Listar todas as transportadoras",
        "tags": [
          "transporters"
        ]
      }
    },
    "/api/transporters/{id}": {
      "get": {
        "operationId": "TransportersController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transportadora encontrada."
          },
          "404": {
            "description": "Transportadora não encontrada."
          }
        },
        "summary": "Buscar transportadora por ID",
        "tags": [
          "transporters"
        ]
      },
      "patch": {
        "operationId": "TransportersController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTransporterDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Transportadora atualizada com sucesso."
          },
          "404": {
            "description": "Transportadora não encontrada."
          }
        },
        "summary": "Atualizar transportadora",
        "tags": [
          "transporters"
        ]
      },
      "delete": {
        "operationId": "TransportersController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transportadora deletada com sucesso."
          },
          "404": {
            "description": "Transportadora não encontrada."
          }
        },
        "summary": "Deletar transportadora",
        "tags": [
          "transporters"
        ]
      }
    },
    "/api/vehicles": {
      "post": {
        "operationId": "VehiclesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateVehicleDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Veículo criado com sucesso."
          },
          "400": {
            "description": "Dados inválidos."
          }
        },
        "summary": "Criar novo veículo",
        "tags": [
          "vehicles"
        ]
      },
      "get": {
        "operationId": "VehiclesController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de veículos retornada com sucesso."
          }
        },
        "summary": "Listar todos os veículos",
        "tags": [
          "vehicles"
        ]
      }
    },
    "/api/vehicles/{id}": {
      "get": {
        "operationId": "VehiclesController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Veículo encontrado."
          },
          "404": {
            "description": "Veículo não encontrado."
          }
        },
        "summary": "Buscar veículo por ID",
        "tags": [
          "vehicles"
        ]
      },
      "patch": {
        "operationId": "VehiclesController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateVehicleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Veículo atualizado com sucesso."
          },
          "404": {
            "description": "Veículo não encontrado."
          }
        },
        "summary": "Atualizar veículo",
        "tags": [
          "vehicles"
        ]
      },
      "delete": {
        "operationId": "VehiclesController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Veículo deletado com sucesso."
          },
          "404": {
            "description": "Veículo não encontrado."
          }
        },
        "summary": "Deletar veículo",
        "tags": [
          "vehicles"
        ]
      }
    },
    "/api/purchases": {
      "post": {
        "operationId": "PurchasesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePurchaseDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Compra criada com sucesso."
          },
          "400": {
            "description": "Dados inválidos."
          }
        },
        "summary": "Criar nova compra",
        "tags": [
          "purchases"
        ]
      },
      "get": {
        "operationId": "PurchasesController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de compras retornada com sucesso."
          }
        },
        "summary": "Listar todas as compras",
        "tags": [
          "purchases"
        ]
      }
    },
    "/api/purchases/check-exists": {
      "get": {
        "operationId": "PurchasesController_checkExists",
        "parameters": [
          {
            "name": "numeroPedido",
            "required": true,
            "in": "query",
            "description": "Número do pedido/nota fiscal",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelo",
            "required": true,
            "in": "query",
            "description": "Modelo da nota fiscal",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serie",
            "required": true,
            "in": "query",
            "description": "Série da nota fiscal",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fornecedorId",
            "required": true,
            "in": "query",
            "description": "ID do fornecedor",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorna se a compra existe ou não."
          }
        },
        "summary": "Verificar se uma compra já existe pela chave composta",
        "tags": [
          "purchases"
        ]
      }
    },
    "/api/purchases/{id}": {
      "get": {
        "operationId": "PurchasesController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Compra encontrada."
          },
          "404": {
            "description": "Compra não encontrada."
          }
        },
        "summary": "Buscar compra por ID",
        "tags": [
          "purchases"
        ]
      },
      "patch": {
        "operationId": "PurchasesController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePurchaseDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Compra atualizada com sucesso."
          },
          "404": {
            "description": "Compra não encontrada."
          }
        },
        "summary": "Atualizar compra",
        "tags": [
          "purchases"
        ]
      },
      "delete": {
        "operationId": "PurchasesController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Compra deletada com sucesso."
          },
          "404": {
            "description": "Compra não encontrada."
          }
        },
        "summary": "Deletar compra",
        "tags": [
          "purchases"
        ]
      }
    },
    "/api/purchases/{id}/approve": {
      "patch": {
        "operationId": "PurchasesController_approve",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Compra aprovada com sucesso."
          },
          "404": {
            "description": "Compra não encontrada."
          }
        },
        "summary": "Aprovar compra",
        "tags": [
          "purchases"
        ]
      }
    },
    "/api/purchases/{id}/deny": {
      "patch": {
        "operationId": "PurchasesController_deny",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Compra negada com sucesso."
          },
          "404": {
            "description": "Compra não encontrada."
          }
        },
        "summary": "Negar compra",
        "tags": [
          "purchases"
        ]
      }
    },
    "/api/sales": {
      "post": {
        "operationId": "SalesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSaleDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Venda criada com sucesso."
          },
          "400": {
            "description": "Dados inválidos."
          }
        },
        "summary": "Criar nova venda",
        "tags": [
          "sales"
        ]
      },
      "get": {
        "operationId": "SalesController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de vendas retornada com sucesso."
          }
        },
        "summary": "Listar todas as vendas",
        "tags": [
          "sales"
        ]
      }
    },
    "/api/sales/check-exists": {
      "get": {
        "operationId": "SalesController_checkExists",
        "parameters": [
          {
            "name": "numeroPedido",
            "required": true,
            "in": "query",
            "description": "Número do pedido/nota fiscal",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelo",
            "required": true,
            "in": "query",
            "description": "Modelo da nota fiscal",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serie",
            "required": true,
            "in": "query",
            "description": "Série da nota fiscal",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clienteId",
            "required": true,
            "in": "query",
            "description": "ID do cliente",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorna se a venda existe ou não."
          }
        },
        "summary": "Verificar se uma venda já existe pela chave composta",
        "tags": [
          "sales"
        ]
      }
    },
    "/api/sales/{id}": {
      "get": {
        "operationId": "SalesController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Venda encontrada."
          },
          "404": {
            "description": "Venda não encontrada."
          }
        },
        "summary": "Buscar venda por ID",
        "tags": [
          "sales"
        ]
      },
      "patch": {
        "operationId": "SalesController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSaleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Venda atualizada com sucesso."
          },
          "404": {
            "description": "Venda não encontrada."
          }
        },
        "summary": "Atualizar venda",
        "tags": [
          "sales"
        ]
      },
      "delete": {
        "operationId": "SalesController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Venda deletada com sucesso."
          },
          "404": {
            "description": "Venda não encontrada."
          }
        },
        "summary": "Deletar venda",
        "tags": [
          "sales"
        ]
      }
    },
    "/api/sales/{id}/approve": {
      "patch": {
        "operationId": "SalesController_approve",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Venda aprovada com sucesso."
          },
          "404": {
            "description": "Venda não encontrada."
          }
        },
        "summary": "Aprovar venda",
        "tags": [
          "sales"
        ]
      }
    },
    "/api/sales/{id}/deny": {
      "patch": {
        "operationId": "SalesController_deny",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Venda negada com sucesso."
          },
          "404": {
            "description": "Venda não encontrada."
          }
        },
        "summary": "Negar venda",
        "tags": [
          "sales"
        ]
      }
    }
  },
  "info": {
    "title": "Serveon API",
    "description": "API RESTful para o sistema Serveon",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "CreateEmployeeDto": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "description": "Nome completo do funcionário",
            "example": "João da Silva"
          },
          "cpf": {
            "type": "string",
            "description": "CPF do funcionário (apenas números)",
            "example": "12345678901"
          },
          "email": {
            "type": "string",
            "description": "Email profissional do funcionário",
            "example": "joao.silva@empresa.com"
          },
          "telefone": {
            "type": "string",
            "description": "Telefone de contato",
            "example": "11987654321"
          },
          "celular": {
            "type": "string",
            "description": "Telefone celular",
            "example": "11999887766"
          },
          "rg": {
            "type": "string",
            "description": "RG do funcionário",
            "example": "123456789"
          },
          "orgaoEmissor": {
            "type": "string",
            "description": "Órgão emissor do RG",
            "example": "SSP/SP"
          },
          "rgCidadeId": {
            "type": "number",
            "description": "ID da cidade onde o RG foi emitido",
            "example": 1
          },
          "dataNascimento": {
            "format": "date-time",
            "type": "string",
            "description": "Data de nascimento",
            "example": "1990-05-15"
          },
          "estadoCivil": {
            "type": "string",
            "description": "Estado civil",
            "example": "Solteiro"
          },
          "nacionalidade": {
            "type": "string",
            "description": "Nacionalidade",
            "example": "BRASILEIRA"
          },
          "nacionalidadeId": {
            "type": "number",
            "description": "ID da nacionalidade",
            "example": 1
          },
          "cep": {
            "type": "string",
            "description": "CEP",
            "example": "01234567"
          },
          "endereco": {
            "type": "string",
            "description": "Endereço",
            "example": "Rua das Flores"
          },
          "numero": {
            "type": "string",
            "description": "Número do endereço",
            "example": "123"
          },
          "complemento": {
            "type": "string",
            "description": "Complemento do endereço",
            "example": "Apto 45"
          },
          "bairro": {
            "type": "string",
            "description": "Bairro",
            "example": "Centro"
          },
          "cidadeId": {
            "type": "number",
            "description": "ID da cidade do funcionário",
            "example": 1
          },
          "cargoId": {
            "type": "number",
            "description": "ID do cargo do funcionário",
            "example": 1
          },
          "departamentoId": {
            "type": "number",
            "description": "ID do departamento do funcionário",
            "example": 1
          },
          "funcaoFuncionarioId": {
            "type": "number",
            "description": "ID da função do funcionário",
            "example": 1
          },
          "dataAdmissao": {
            "format": "date-time",
            "type": "string",
            "description": "Data de admissão no formato YYYY-MM-DD",
            "example": "2023-01-15"
          },
          "salario": {
            "type": "number",
            "description": "Salário do funcionário",
            "example": 5000
          },
          "observacoes": {
            "type": "string",
            "description": "Observações sobre o funcionário",
            "example": "Funcionário exemplar"
          },
          "ativo": {
            "type": "boolean",
            "description": "Status ativo/inativo do funcionário",
            "example": true,
            "default": true
          }
        },
        "required": [
          "nome",
          "cpf",
          "email",
          "dataAdmissao",
          "ativo"
        ]
      },
      "Employee": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "ID único do registro",
            "example": 1
          },
          "ativo": {
            "type": "boolean",
            "description": "Status ativo/inativo do registro",
            "example": true,
            "default": true
          },
          "createdAt": {
            "type": "object",
            "description": "Data de criação do registro",
            "example": "2025-06-19T10:00:00Z"
          },
          "updatedAt": {
            "type": "object",
            "description": "Data da última atualização do registro",
            "example": "2025-06-19T10:00:00Z"
          },
          "nome": {
            "type": "string",
            "description": "Nome completo do funcionário",
            "example": "João da Silva"
          },
          "apelido": {
            "type": "string",
            "description": "Apelido do funcionário",
            "example": "João"
          },
          "cpf": {
            "type": "string",
            "description": "CPF do funcionário (apenas números)",
            "example": "12345678901"
          },
          "email": {
            "type": "string",
            "description": "Email profissional do funcionário",
            "example": "joao.silva@empresa.com"
          },
          "telefone": {
            "type": "string",
            "description": "Telefone de contato",
            "example": "11987654321"
          },
          "celular": {
            "type": "string",
            "description": "Telefone celular",
            "example": "11999887766"
          },
          "rg": {
            "type": "string",
            "description": "RG do funcionário",
            "example": "123456789"
          },
          "rgInscricaoEstadual": {
            "type": "string",
            "description": "RG/Inscrição Estadual do funcionário",
            "example": "12345678901234"
          },
          "orgaoEmissor": {
            "type": "string",
            "description": "Órgão emissor do RG",
            "example": "SSP/SP"
          },
          "rgCidadeId": {
            "type": "number",
            "description": "ID da cidade onde o RG foi emitido",
            "example": 1
          },
          "cnh": {
            "type": "string",
            "description": "CNH do funcionário",
            "example": "12345678901"
          },
          "dataValidadeCnh": {
            "format": "date-time",
            "type": "string",
            "description": "Data de validade da CNH",
            "example": "2026-12-31"
          },
          "dataNascimento": {
            "format": "date-time",
            "type": "string",
            "description": "Data de nascimento",
            "example": "1990-05-15"
          },
          "estadoCivil": {
            "type": "string",
            "description": "Estado civil",
            "example": "Solteiro"
          },
          "sexo": {
            "type": "number",
            "description": "Sexo (1=Masculino, 2=Feminino)",
            "example": 1,
            "enum": [
              1,
              2
            ]
          },
          "nacionalidade": {
            "type": "string",
            "description": "Nacionalidade",
            "example": "BRASILEIRA"
          },
          "nacionalidadeId": {
            "type": "number",
            "description": "ID da nacionalidade",
            "example": 1
          },
          "tipo": {
            "type": "number",
            "description": "Tipo do funcionário",
            "example": 1
          },
          "cep": {
            "type": "string",
            "description": "CEP",
            "example": "01234567"
          },
          "endereco": {
            "type": "string",
            "description": "Endereço",
            "example": "Rua das Flores, 123"
          },
          "numero": {
            "type": "string",
            "description": "Número do endereço",
            "example": "123"
          },
          "complemento": {
            "type": "string",
            "description": "Complemento do endereço",
            "example": "Apto 45"
          },
          "bairro": {
            "type": "string",
            "description": "Bairro",
            "example": "Centro"
          },
          "cidadeId": {
            "type": "number",
            "description": "ID da cidade do funcionário",
            "example": 1
          },
          "cidadeNome": {
            "type": "string",
            "description": "Nome da cidade do funcionário",
            "example": "São Paulo"
          },
          "estadoNome": {
            "type": "string",
            "description": "Nome do estado",
            "example": "São Paulo"
          },
          "uf": {
            "type": "string",
            "description": "UF do estado",
            "example": "SP"
          },
          "cargoId": {
            "type": "number",
            "description": "ID do cargo do funcionário",
            "example": 1
          },
          "cargoNome": {
            "type": "string",
            "description": "Nome do cargo do funcionário",
            "example": "Vendedor"
          },
          "departamentoId": {
            "type": "number",
            "description": "ID do departamento do funcionário",
            "example": 1
          },
          "departamentoNome": {
            "type": "string",
            "description": "Nome do departamento do funcionário",
            "example": "Comercial"
          },
          "funcaoFuncionarioId": {
            "type": "number",
            "description": "ID da função do funcionário",
            "example": 1
          },
          "funcaoFuncionarioNome": {
            "type": "string",
            "description": "Nome da função do funcionário",
            "example": "VENDEDOR"
          },
          "dataAdmissao": {
            "format": "date-time",
            "type": "string",
            "description": "Data de admissão",
            "example": "2023-01-15"
          },
          "dataDemissao": {
            "format": "date-time",
            "type": "string",
            "description": "Data de demissão (se aplicável)",
            "example": null
          },
          "salario": {
            "type": "number",
            "description": "Salário do funcionário",
            "example": 5000
          },
          "observacoes": {
            "type": "string",
            "description": "Observações sobre o funcionário (campo TEXT)",
            "example": "Funcionário exemplar, pontual e dedicado"
          },
          "observacao": {
            "type": "string",
            "description": "Observação (campo VARCHAR)",
            "example": "Ativo"
          }
        },
        "required": [
          "id",
          "ativo",
          "createdAt",
          "updatedAt",
          "nome",
          "cpf",
          "email",
          "telefone",
          "celular",
          "rg",
          "orgaoEmissor",
          "rgCidadeId",
          "dataNascimento",
          "estadoCivil",
          "sexo",
          "nacionalidade",
          "nacionalidadeId",
          "cep",
          "endereco",
          "numero",
          "complemento",
          "bairro",
          "cidadeId",
          "cidadeNome",
          "estadoNome",
          "uf",
          "cargoId",
          "cargoNome",
          "departamentoId",
          "departamentoNome",
          "funcaoFuncionarioId",
          "funcaoFuncionarioNome",
          "dataAdmissao",
          "dataDemissao",
          "salario"
        ]
      },
      "UpdateEmployeeDto": {
        "type": "object",
        "properties": {
          "dataDemissao": {
            "format": "date-time",
            "type": "string",
            "description": "Data de demissão no formato YYYY-MM-DD",
            "example": "2023-12-31"
          }
        }
      },
      "CreateDepartmentDto": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "description": "Nome do departamento",
            "example": "Tecnologia da Informação",
            "maxLength": 100
          },
          "descricao": {
            "type": "string",
            "description": "Descrição do departamento",
            "example": "Departamento responsável pela infraestrutura e desenvolvimento de sistemas",
            "maxLength": 500
          }
        },
        "required": [
          "nome"
        ]
      },
      "Department": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "ID único do registro",
            "example": 1
          },
          "ativo": {
            "type": "boolean",
            "description": "Status ativo/inativo do registro",
            "example": true,
            "default": true
          },
          "createdAt": {
            "type": "object",
            "description": "Data de criação do registro",
            "example": "2025-06-19T10:00:00Z"
          },
          "updatedAt": {
            "type": "object",
            "description": "Data da última atualização do registro",
            "example": "2025-06-19T10:00:00Z"
          },
          "nome": {
            "type": "string",
            "description": "Nome do departamento",
            "example": "Recursos Humanos",
            "maxLength": 100
          },
          "descricao": {
            "type": "string",
            "description": "Descrição do departamento",
            "example": "Departamento responsável pela gestão de pessoas"
          }
        },
        "required": [
          "id",
          "ativo",
          "createdAt",
          "updatedAt",
          "nome"
        ]
      },
      "UpdateDepartmentDto": {
        "type": "object",
        "properties": {
          "ativo": {
            "type": "boolean",
            "description": "Status ativo/inativo do departamento",
            "example": true
          }
        }
      },
      "CreatePositionDto": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "description": "Nome do cargo",
            "example": "Desenvolvedor Full Stack",
            "maxLength": 100
          },
          "descricao": {
            "type": "string",
            "description": "Descrição do cargo",
            "example": "Responsável pelo desenvolvimento de aplicações web front-end e back-end",
            "maxLength": 500
          },
          "departamentoId": {
            "type": "number",
            "description": "ID do departamento ao qual o cargo pertence",
            "example": 1
          }
        },
        "required": [
          "nome"
        ]
      },
      "Position": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "ID único do registro",
            "example": 1
          },
          "ativo": {
            "type": "boolean",
            "description": "Status ativo/inativo do registro",
            "example": true,
            "default": true
          },
          "createdAt": {
            "type": "object",
            "description": "Data de criação do registro",
            "example": "2025-06-19T10:00:00Z"
          },
          "updatedAt": {
            "type": "object",
            "description": "Data da última atualização do registro",
            "example": "2025-06-19T10:00:00Z"
          },
          "nome": {
            "type": "string",
            "description": "Nome do cargo",
            "example": "Analista de Sistemas",
            "maxLength": 100
          },
          "descricao": {
            "type": "string",
            "description": "Descrição do cargo",
            "example": "Responsável por desenvolver e manter sistemas"
          },
          "departamentoId": {
            "type": "number",
            "description": "ID do departamento ao qual o cargo pertence",
            "example": 1
          },
          "departamentoNome": {
            "type": "string",
            "description": "Nome do departamento ao qual o cargo pertence",
            "example": "Tecnologia da Informação"
          }
        },
        "required": [
          "id",
          "ativo",
          "createdAt",
          "updatedAt",
          "nome"
        ]
      },
      "UpdatePositionDto": {
        "type": "object",
        "properties": {
          "ativo": {
            "type": "boolean",
            "description": "Status ativo/inativo do cargo",
            "example": true
          }
        }
      },
      "CreateCityDto": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "description": "Nome da cidade",
            "example": "São Paulo"
          },
          "codigoIbge": {
            "type": "string",
            "description": "Código IBGE da cidade",
            "example": "3550308"
          },
          "estadoId": {
            "type": "number",
            "description": "ID do estado ao qual a cidade pertence",
            "example": 1
          }
        },
        "required": [
          "nome",
          "estadoId"
        ]
      },
      "City": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "ID único do registro",
            "example": 1
          },
          "ativo": {
            "type": "boolean",
            "description": "Status ativo/inativo do registro",
            "example": true,
            "default": true
          },
          "createdAt": {
            "type": "object",
            "description": "Data de criação do registro",
            "example": "2025-06-19T10:00:00Z"
          },
          "updatedAt": {
            "type": "object",
            "description": "Data da última atualização do registro",
            "example": "2025-06-19T10:00:00Z"
          },
          "nome": {
            "type": "string",
            "description": "Nome da cidade",
            "example": "São Paulo"
          },
          "codigoIbge": {
            "type": "string",
            "description": "Código IBGE da cidade",
            "example": "3550308"
          },
          "estadoId": {
            "type": "number",
            "description": "ID do estado ao qual a cidade pertence",
            "example": 1
          },
          "estadoNome": {
            "type": "string",
            "description": "Nome do estado",
            "example": "São Paulo"
          },
          "uf": {
            "type": "string",
            "description": "UF do estado",
            "example": "SP"
          },
          "paisNome": {
            "type": "string",
            "description": "Nome do país",
            "example": "Brasil"
          }
        },
        "required": [
          "id",
          "ativo",
          "createdAt",
          "updatedAt",
          "nome",
          "estadoId",
          "estadoNome",
          "uf",
          "paisNome"
        ]
      },
      "UpdateCityDto": {
        "type": "object",
        "properties": {}
      },
      "CreateCustomerDto": {
        "type": "object",
        "properties": {
          "cnpjCpf": {
            "type": "string",
            "description": "CNPJ, CPF ou número de documento internacional do cliente",
            "example": "12345678901234"
          },
          "tipo": {
            "type": "string",
            "description": "Tipo de cliente: F para Pessoa Física, J para Pessoa Jurídica",
            "example": "J",
            "enum": [
              "F",
              "J"
            ]
          },
          "isEstrangeiro": {
            "type": "boolean",
            "description": "Indica se é um cliente estrangeiro",
            "example": false,
            "default": false
          },
          "tipoDocumento": {
            "type": "string",
            "description": "Tipo de documento para clientes estrangeiros",
            "example": "passport",
            "enum": [
              "passport",
              "tax_id",
              "national_id",
              "other"
            ]
          },
          "razaoSocial": {
            "type": "string",
            "description": "Razão Social ou Nome Completo",
            "example": "Empresa XYZ Ltda"
          },
          "nomeFantasia": {
            "type": "string",
            "description": "Nome Fantasia (opcional)",
            "example": "XYZ Tecnologia"
          },
          "inscricaoEstadual": {
            "type": "string",
            "description": "Inscrição Estadual ou dados adicionais do documento estrangeiro",
            "example": "123456789"
          },
          "paisId": {
            "type": "number",
            "description": "ID do país",
            "example": 1
          },
          "estadoId": {
            "type": "number",
            "description": "ID do estado/província",
            "example": 1
          },
          "cidadeId": {
            "type": "number",
            "description": "ID da cidade no sistema",
            "example": 1
          },
          "endereco": {
            "type": "string",
            "description": "Endereço",
            "example": "Av. Brasil"
          },
          "numero": {
            "type": "string",
            "description": "Número do endereço (opcional)",
            "example": "123"
          },
          "complemento": {
            "type": "string",
            "description": "Complemento do endereço (opcional)",
            "example": "Sala 101"
          },
          "bairro": {
            "type": "string",
            "description": "Bairro (opcional)",
            "example": "Centro"
          },
          "cep": {
            "type": "string",
            "description": "CEP ou Código Postal",
            "example": "12345678"
          },
          "telefone": {
            "type": "string",
            "description": "Telefone (opcional)",
            "example": "11987654321"
          },
          "email": {
            "type": "string",
            "description": "Email (opcional)",
            "example": "contato@empresa.com"
          },
          "ativo": {
            "type": "boolean",
            "description": "Status ativo/inativo do cliente",
            "example": true,
            "default": true
          },
          "isDestinatario": {
            "type": "boolean",
            "description": "Se o cliente também é um destinatário",
            "example": true,
            "default": true
          },
          "nacionalidadeId": {
            "type": "number",
            "description": "ID da nacionalidade",
            "example": 1
          },
          "limiteCredito": {
            "type": "number",
            "description": "Limite de crédito do cliente",
            "example": 50000
          },
          "condicaoPagamentoId": {
            "type": "number",
            "description": "ID da condição de pagamento",
            "example": 1
          },
          "destinatariosIds": {
            "description": "Lista de IDs de destinatários associados (quando o cliente não é o destinatário)",
            "example": [
              1
            ],
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        },
        "required": [
          "cnpjCpf",
          "tipo",
          "isEstrangeiro",
          "razaoSocial",
          "ativo",
          "isDestinatario"
        ]
      },
      "Customer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "ID único do registro",
            "example": 1
          },
          "ativo": {
            "type": "boolean",
            "description": "Status ativo/inativo do registro",
            "example": true,
            "default": true
          },
          "createdAt": {
            "type": "object",
            "description": "Data de criação do registro",
            "example": "2025-06-19T10:00:00Z"
          },
          "updatedAt": {
            "type": "object",
            "description": "Data da última atualização do registro",
            "example": "2025-06-19T10:00:00Z"
          },
          "cnpjCpf": {
            "type": "string",
            "description": "CNPJ, CPF ou documento internacional do cliente",
            "example": "12345678901234"
          },
          "tipo": {
            "type": "string",
            "description": "Tipo de cliente: F para Pessoa Física, J para Pessoa Jurídica",
            "example": "J",
            "enum": [
              "F",
              "J"
            ]
          },
          "isEstrangeiro": {
            "type": "boolean",
            "description": "Indica se é um cliente estrangeiro",
            "example": false
          },
          "tipoDocumento": {
            "type": "string",
            "description": "Tipo de documento para clientes estrangeiros",
            "example": "passport"
          },
          "razaoSocial": {
            "type": "string",
            "description": "Razão Social ou Nome Completo",
            "example": "Empresa XYZ Ltda"
          },
          "nomeFantasia": {
            "type": "string",
            "description": "Nome Fantasia (opcional)",
            "example": "XYZ Tecnologia"
          },
          "inscricaoEstadual": {
            "type": "string",
            "description": "Inscrição Estadual ou dados adicionais do documento estrangeiro",
            "example": "123456789"
          },
          "paisId": {
            "type": "number",
            "description": "ID do país",
            "example": 1
          },
          "nacionalidadeId": {
            "type": "number",
            "description": "ID da nacionalidade",
            "example": 1
          },
          "estadoId": {
            "type": "number",
            "description": "ID do estado/província",
            "example": 1
          },
          "cidadeId": {
            "type": "number",
            "description": "ID da cidade no sistema",
            "example": 1
          },
          "cidadeNome": {
            "type": "string",
            "description": "Nome da cidade",
            "example": "São Paulo"
          },
          "endereco": {
            "type": "string",
            "description": "Endereço",
            "example": "Av. Brasil"
          },
          "numero": {
            "type": "string",
            "description": "Número do endereço (opcional)",
            "example": "123"
          },
          "complemento": {
            "type": "string",
            "description": "Complemento do endereço (opcional)",
            "example": "Sala 101"
          },
          "bairro": {
            "type": "string",
            "description": "Bairro (opcional)",
            "example": "Centro"
          },
          "cep": {
            "type": "string",
            "description": "CEP ou Código Postal",
            "example": "12345678"
          },
          "telefone": {
            "type": "string",
            "description": "Telefone (opcional)",
            "example": "11987654321"
          },
          "email": {
            "type": "string",
            "description": "Email (opcional)",
            "example": "contato@empresa.com"
          },
          "isDestinatario": {
            "type": "boolean",
            "description": "Se o cliente também é um destinatário",
            "example": true,
            "default": true
          },
          "limiteCredito": {
            "type": "number",
            "description": "Limite de crédito do cliente",
            "example": 50000
          },
          "condicaoPagamentoId": {
            "type": "number",
            "description": "ID da condição de pagamento",
            "example": 1
          }
        },
        "required": [
          "id",
          "ativo",
          "createdAt",
          "updatedAt",
          "cnpjCpf",
          "tipo",
          "isEstrangeiro",
          "razaoSocial",
          "paisId",
          "nacionalidadeId",
          "estadoId",
          "isDestinatario",
          "limiteCredito"
        ]
      },
      "UpdateCustomerDto": {
        "type": "object",
        "properties": {
          "ativo": {
            "type": "boolean",
            "description": "Status ativo/inativo do cliente",
            "example": true
          },
          "isDestinatario": {
            "type": "boolean",
            "description": "Se o cliente também é um destinatário",
            "example": true
          },
          "destinatariosIds": {
            "description": "Lista de IDs de destinatários associados (quando o cliente não é o destinatário)",
            "example": [
              1,
              2,
              3
            ],
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        }
      },
      "CreateCountryDto": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "description": "Nome do país",
            "example": "Brasil"
          },
          "codigo": {
            "type": "string",
            "description": "Código de chamada internacional do país",
            "example": "55"
          },
          "sigla": {
            "type": "string",
            "description": "Sigla do país (2 caracteres)",
            "example": "BR"
          }
        },
        "required": [
          "nome",
          "codigo",
          "sigla"
        ]
      },
      "Country": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "ID único do registro",
            "example": 1
          },
          "ativo": {
            "type": "boolean",
            "description": "Status ativo/inativo do registro",
            "example": true,
            "default": true
          },
          "createdAt": {
            "type": "object",
            "description": "Data de criação do registro",
            "example": "2025-06-19T10:00:00Z"
          },
          "updatedAt": {
            "type": "object",
            "description": "Data da última atualização do registro",
            "example": "2025-06-19T10:00:00Z"
          },
          "nome": {
            "type": "string",
            "description": "Nome do país",
            "example": "Brasil"
          },
          "codigo": {
            "type": "string",
            "description": "Código de chamada internacional do país",
            "example": "55"
          },
          "sigla": {
            "type": "string",
            "description": "Sigla do país",
            "example": "BR"
          },
          "nacionalidade": {
            "type": "string",
            "description": "Nacionalidade",
            "example": "BRASILEIRA"
          }
        },
        "required": [
          "id",
          "ativo",
          "createdAt",
          "updatedAt",
          "nome",
          "codigo",
          "sigla"
        ]
      },
      "UpdateCountryDto": {
        "type": "object",
        "properties": {}
      },
      "CreateStateDto": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "description": "Nome do estado",
            "example": "São Paulo"
          },
          "uf": {
            "type": "string",
            "description": "UF do estado (2 caracteres)",
            "example": "SP"
          },
          "paisId": {
            "type": "number",
            "description": "ID do país ao qual o estado pertence",
            "example": 1
          }
        },
        "required": [
          "nome",
          "uf",
          "paisId"
        ]
      },
      "State": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "ID único do registro",
            "example": 1
          },
          "ativo": {
            "type": "boolean",
            "description": "Status ativo/inativo do registro",
            "example": true,
            "default": true
          },
          "createdAt": {
            "type": "object",
            "description": "Data de criação do registro",
            "example": "2025-06-19T10:00:00Z"
          },
          "updatedAt": {
            "type": "object",
            "description": "Data da última atualização do registro",
            "example": "2025-06-19T10:00:00Z"
          },
          "nome": {
            "type": "string",
            "description": "Nome do estado",
            "example": "São Paulo"
          },
          "uf": {
            "type": "string",
            "description": "UF do estado",
            "example": "SP"
          },
          "paisId": {
            "type": "number",
            "description": "ID do país ao qual o estado pertence",
            "example": 1
          },
          "paisNome": {
            "type": "string",
            "description": "Nome do país ao qual o estado pertence",
            "example": "Brasil"
          }
        },
        "required": [
          "id",
          "ativo",
          "createdAt",
          "updatedAt",
          "nome",
          "uf",
          "paisId",
          "paisNome"
        ]
      },
      "UpdateStateDto": {
        "type": "object",
        "properties": {}
      },
      "CreatePaymentMethodDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the payment method",
            "example": "Credit Card"
          },
          "type": {
            "type": "string",
            "description": "Type of payment method",
            "example": "card"
          },
          "ativo": {
            "type": "boolean",
            "description": "Status of the payment method (active/inactive)",
            "example": true,
            "default": true
          }
        },
        "required": [
          "name",
          "type"
        ]
      },
      "PaymentMethod": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "ID único do registro",
            "example": 1
          },
          "ativo": {
            "type": "boolean",
            "description": "Status ativo/inativo do registro",
            "example": true,
            "default": true
          },
          "createdAt": {
            "type": "object",
            "description": "Data de criação do registro",
            "example": "2025-06-19T10:00:00Z"
          },
          "updatedAt": {
            "type": "object",
            "description": "Data da última atualização do registro",
            "example": "2025-06-19T10:00:00Z"
          },
          "name": {
            "type": "string",
            "description": "Name of the payment method",
            "example": "Credit Card"
          },
          "type": {
            "type": "string",
            "description": "Type of payment method",
            "example": "card"
          }
        },
        "required": [
          "id",
          "ativo",
          "createdAt",
          "updatedAt",
          "name",
          "type"
        ]
      },
      "UpdatePaymentMethodDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the payment method",
            "example": "Credit Card"
          },
          "type": {
            "type": "string",
            "description": "Type of payment method",
            "example": "card"
          },
          "ativo": {
            "type": "boolean",
            "description": "Status of the payment method (active/inactive)",
            "example": true,
            "default": true
          }
        }
      },
      "CreatePaymentTermDto": {
        "type": "object",
        "properties": {}
      },
      "UpdatePaymentTermDto": {
        "type": "object",
        "properties": {}
      },
      "CreateSupplierDto": {
        "type": "object",
        "properties": {
          "cnpjCpf": {
            "type": "string",
            "description": "CNPJ, CPF ou número de documento internacional do fornecedor",
            "example": "12345678901234"
          },
          "tipo": {
            "type": "string",
            "description": "Tipo de fornecedor: F para Pessoa Física, J para Pessoa Jurídica",
            "example": "J",
            "enum": [
              "F",
              "J"
            ]
          },
          "isEstrangeiro": {
            "type": "boolean",
            "description": "Indica se é um fornecedor estrangeiro",
            "example": false,
            "default": false
          },
          "tipoDocumento": {
            "type": "string",
            "description": "Tipo de documento para fornecedores estrangeiros",
            "example": "passport",
            "enum": [
              "passport",
              "tax_id",
              "national_id",
              "other"
            ]
          },
          "razaoSocial": {
            "type": "string",
            "description": "Razão Social ou Nome Completo",
            "example": "Empresa XYZ Ltda"
          },
          "nomeFantasia": {
            "type": "string",
            "description": "Nome Fantasia",
            "example": "XYZ Tecnologia"
          },
          "inscricaoEstadual": {
            "type": "string",
            "description": "Inscrição Estadual ou informações complementares do documento",
            "example": "123456789"
          },
          "estadoId": {
            "type": "number",
            "description": "ID do estado/província",
            "example": 1
          },
          "endereco": {
            "type": "string",
            "description": "Endereço",
            "example": "Av. Brasil"
          },
          "numero": {
            "type": "string",
            "description": "Número do endereço",
            "example": "123"
          },
          "complemento": {
            "type": "string",
            "description": "Complemento do endereço",
            "example": "Sala 101"
          },
          "bairro": {
            "type": "string",
            "description": "Bairro",
            "example": "Centro"
          },
          "cidadeId": {
            "type": "number",
            "description": "ID da cidade",
            "example": 1
          },
          "cep": {
            "type": "string",
            "description": "CEP",
            "example": "12345-678"
          },
          "telefone": {
            "type": "string",
            "description": "Telefone",
            "example": "(11) 1234-5678"
          },
          "email": {
            "type": "string",
            "description": "Email",
            "example": "contato@empresa.com"
          },
          "condicaoPagamentoId": {
            "type": "number",
            "description": "ID da condição de pagamento",
            "example": 1
          },
          "website": {
            "type": "string",
            "description": "Website do fornecedor",
            "example": "https://www.empresa.com"
          },
          "observacoes": {
            "type": "string",
            "description": "Observações sobre o fornecedor",
            "example": "Fornecedor preferencial para materiais de escritório"
          },
          "responsavel": {
            "type": "string",
            "description": "Nome do responsável pelo contato",
            "example": "João Silva"
          },
          "celularResponsavel": {
            "type": "string",
            "description": "Celular do responsável",
            "example": "(11) 98765-4321"
          },
          "limiteCredito": {
            "type": "number",
            "description": "Limite de crédito do fornecedor",
            "example": 10000,
            "default": 0
          },
          "nacionalidadeId": {
            "type": "number",
            "description": "ID da nacionalidade (país)",
            "example": 1
          },
          "transportadoraId": {
            "type": "number",
            "description": "ID da transportadora",
            "example": 1
          }
        },
        "required": [
          "cnpjCpf",
          "tipo",
          "isEstrangeiro",
          "razaoSocial",
          "limiteCredito"
        ]
      },
      "Supplier": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "ID único do registro",
            "example": 1
          },
          "ativo": {
            "type": "boolean",
            "description": "Status ativo/inativo do registro",
            "example": true,
            "default": true
          },
          "createdAt": {
            "type": "object",
            "description": "Data de criação do registro",
            "example": "2025-06-19T10:00:00Z"
          },
          "updatedAt": {
            "type": "object",
            "description": "Data da última atualização do registro",
            "example": "2025-06-19T10:00:00Z"
          },
          "cnpjCpf": {
            "type": "string",
            "description": "CNPJ, CPF ou documento internacional do fornecedor",
            "example": "12345678901234"
          },
          "tipo": {
            "type": "string",
            "description": "Tipo de fornecedor: F para Pessoa Física, J para Pessoa Jurídica",
            "example": "J",
            "enum": [
              "F",
              "J"
            ]
          },
          "isEstrangeiro": {
            "type": "boolean",
            "description": "Indica se é um fornecedor estrangeiro",
            "example": false
          },
          "tipoDocumento": {
            "type": "string",
            "description": "Tipo de documento para fornecedores estrangeiros",
            "example": "passport"
          },
          "razaoSocial": {
            "type": "string",
            "description": "Razão Social ou Nome Completo",
            "example": "Empresa XYZ Ltda"
          },
          "nomeFantasia": {
            "type": "string",
            "description": "Nome Fantasia",
            "example": "XYZ Tecnologia"
          },
          "inscricaoEstadual": {
            "type": "string",
            "description": "Inscrição Estadual ou informações complementares do documento",
            "example": "123456789"
          },
          "endereco": {
            "type": "string",
            "description": "Endereço",
            "example": "Av. Brasil"
          },
          "numero": {
            "type": "string",
            "description": "Número do endereço",
            "example": "123"
          },
          "complemento": {
            "type": "string",
            "description": "Complemento do endereço",
            "example": "Sala 101"
          },
          "bairro": {
            "type": "string",
            "description": "Bairro",
            "example": "Centro"
          },
          "cidadeId": {
            "type": "number",
            "description": "ID da cidade",
            "example": 1
          },
          "cidadeNome": {
            "type": "string",
            "description": "Nome da cidade",
            "example": "São Paulo"
          },
          "cep": {
            "type": "string",
            "description": "CEP",
            "example": "12345-678"
          },
          "telefone": {
            "type": "string",
            "description": "Telefone",
            "example": "(11) 1234-5678"
          },
          "email": {
            "type": "string",
            "description": "Email",
            "example": "contato@empresa.com"
          },
          "condicaoPagamentoId": {
            "type": "number",
            "description": "ID da condição de pagamento",
            "example": 1
          },
          "condicaoPagamentoNome": {
            "type": "string",
            "description": "Nome da condição de pagamento",
            "example": "À Vista"
          },
          "website": {
            "type": "string",
            "description": "Website do fornecedor",
            "example": "https://www.empresa.com"
          },
          "observacoes": {
            "type": "string",
            "description": "Observações sobre o fornecedor",
            "example": "Fornecedor preferencial para materiais de escritório"
          },
          "responsavel": {
            "type": "string",
            "description": "Nome do responsável pelo contato",
            "example": "João Silva"
          },
          "celularResponsavel": {
            "type": "string",
            "description": "Celular do responsável",
            "example": "(11) 98765-4321"
          },
          "limiteCredito": {
            "type": "number",
            "description": "Limite de crédito do fornecedor",
            "example": 10000
          },
          "nacionalidadeId": {
            "type": "number",
            "description": "ID da nacionalidade (país)",
            "example": 1
          }
        },
        "required": [
          "id",
          "ativo",
          "createdAt",
          "updatedAt",
          "cnpjCpf",
          "tipo",
          "isEstrangeiro",
          "razaoSocial",
          "nomeFantasia",
          "inscricaoEstadual",
          "endereco",
          "numero",
          "complemento",
          "bairro",
          "cidadeId",
          "cidadeNome",
          "cep",
          "telefone",
          "email",
          "condicaoPagamentoId",
          "condicaoPagamentoNome",
          "website",
          "observacoes",
          "responsavel",
          "celularResponsavel",
          "limiteCredito",
          "nacionalidadeId"
        ]
      },
      "UpdateSupplierDto": {
        "type": "object",
        "properties": {
          "ativo": {
            "type": "boolean",
            "description": "Status ativo/inativo do fornecedor",
            "example": true
          }
        }
      },
      "CreateProductDto": {
        "type": "object",
        "properties": {
          "produto": {
            "type": "string",
            "description": "Nome/descrição do produto",
            "example": "Notebook Dell Inspiron 15"
          },
          "unidadeMedidaId": {
            "type": "number",
            "description": "ID da unidade de medida",
            "example": 1
          },
          "codigoBarras": {
            "type": "string",
            "description": "Código de barras do produto",
            "example": "7891234567890"
          },
          "referencia": {
            "type": "string",
            "description": "Referência do produto",
            "example": "NB001"
          },
          "marcaId": {
            "type": "number",
            "description": "ID da marca",
            "example": 1
          },
          "categoriaId": {
            "type": "number",
            "description": "ID da categoria",
            "example": 1
          },
          "quantidadeMinima": {
            "type": "number",
            "description": "Quantidade mínima em estoque",
            "example": 5,
            "default": 0
          },
          "valorCompra": {
            "type": "number",
            "description": "Valor de compra do produto",
            "example": 1500
          },
          "valorVenda": {
            "type": "number",
            "description": "Valor de venda do produto",
            "example": 2100
          },
          "quantidade": {
            "type": "number",
            "description": "Quantidade atual em estoque",
            "example": 10,
            "default": 0
          },
          "percentualLucro": {
            "type": "number",
            "description": "Percentual de lucro sobre o produto",
            "example": 40
          },
          "descricao": {
            "type": "string",
            "description": "Descrição detalhada do produto",
            "example": "Notebook Dell Inspiron 15 com processador Intel i5"
          },
          "observacoes": {
            "type": "string",
            "description": "Observações sobre o produto",
            "example": "Produto em promoção até 31/12"
          },
          "situacao": {
            "type": "string",
            "description": "Data de situação do produto (formato YYYY-MM-DD)",
            "example": "2025-06-19"
          },
          "usuarioCriacao": {
            "type": "string",
            "description": "Usuário que está criando o produto",
            "example": "admin"
          },
          "codigo": {
            "type": "string",
            "description": "Código do produto para NFe",
            "example": "PROD001"
          },
          "ncm": {
            "type": "string",
            "description": "NCM do produto",
            "example": "8471.30.12"
          },
          "cest": {
            "type": "string",
            "description": "CEST do produto",
            "example": "01.001.00"
          },
          "unidade": {
            "type": "string",
            "description": "Unidade para NFe",
            "example": "UN"
          },
          "valorUnitario": {
            "type": "number",
            "description": "Valor unitário para NFe",
            "example": 2100
          },
          "pesoLiquido": {
            "type": "number",
            "description": "Peso líquido em kg",
            "example": 2.5
          },
          "pesoBruto": {
            "type": "number",
            "description": "Peso bruto em kg",
            "example": 3
          },
          "gtin": {
            "type": "string",
            "description": "GTIN/EAN do produto",
            "example": "7891234567890"
          },
          "gtinTributavel": {
            "type": "string",
            "description": "GTIN tributável",
            "example": "7891234567890"
          },
          "ativo": {
            "type": "boolean",
            "description": "Status do produto (ativo/inativo)",
            "example": true,
            "default": true
          }
        },
        "required": [
          "produto",
          "quantidadeMinima",
          "quantidade",
          "ativo"
        ]
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "ID único do registro",
            "example": 1
          },
          "ativo": {
            "type": "boolean",
            "description": "Status ativo/inativo do registro",
            "example": true,
            "default": true
          },
          "createdAt": {
            "type": "object",
            "description": "Data de criação do registro",
            "example": "2025-06-19T10:00:00Z"
          },
          "updatedAt": {
            "type": "object",
            "description": "Data da última atualização do registro",
            "example": "2025-06-19T10:00:00Z"
          },
          "produto": {
            "type": "string",
            "description": "Nome/descrição do produto",
            "example": "Notebook Dell Inspiron 15"
          },
          "unidadeMedidaId": {
            "type": "number",
            "description": "ID da unidade de medida",
            "example": 1
          },
          "unidadeMedidaNome": {
            "type": "string",
            "description": "Nome da unidade de medida",
            "example": "UN"
          },
          "codigoBarras": {
            "type": "string",
            "description": "Código de barras do produto",
            "example": "7891234567890"
          },
          "referencia": {
            "type": "string",
            "description": "Referência do produto",
            "example": "NB001"
          },
          "marcaId": {
            "type": "number",
            "description": "ID da marca",
            "example": 1
          },
          "marcaNome": {
            "type": "string",
            "description": "Nome da marca",
            "example": "Dell"
          },
          "categoriaId": {
            "type": "number",
            "description": "ID da categoria",
            "example": 1
          },
          "categoriaNome": {
            "type": "string",
            "description": "Nome da categoria",
            "example": "Informática"
          },
          "quantidadeMinima": {
            "type": "number",
            "description": "Quantidade mínima em estoque",
            "example": 5,
            "default": 0
          },
          "valorCompra": {
            "type": "number",
            "description": "Valor de compra do produto",
            "example": 1500
          },
          "valorVenda": {
            "type": "number",
            "description": "Valor de venda do produto",
            "example": 2100
          },
          "quantidade": {
            "type": "number",
            "description": "Quantidade atual em estoque",
            "example": 10,
            "default": 0
          },
          "percentualLucro": {
            "type": "number",
            "description": "Percentual de lucro sobre o produto",
            "example": 40
          },
          "descricao": {
            "type": "string",
            "description": "Descrição detalhada do produto",
            "example": "Notebook Dell Inspiron 15 com processador Intel i5"
          },
          "observacoes": {
            "type": "string",
            "description": "Observações sobre o produto",
            "example": "Produto em promoção até 31/12"
          },
          "situacao": {
            "format": "date-time",
            "type": "string",
            "description": "Data de situação do produto",
            "example": "2025-06-19"
          },
          "dataCriacao": {
            "format": "date-time",
            "type": "string",
            "description": "Data de criação do produto",
            "example": "2025-06-19"
          },
          "dataAlteracao": {
            "format": "date-time",
            "type": "string",
            "description": "Data da última alteração",
            "example": "2025-06-19"
          },
          "usuarioCriacao": {
            "type": "string",
            "description": "Usuário que criou o produto",
            "example": "admin"
          },
          "usuarioAtualizacao": {
            "type": "string",
            "description": "Usuário que atualizou o produto",
            "example": "admin"
          },
          "codigo": {
            "type": "string",
            "description": "Código do produto para NFe",
            "example": "PROD001"
          },
          "ncm": {
            "type": "string",
            "description": "NCM do produto",
            "example": "8471.30.12"
          },
          "cest": {
            "type": "string",
            "description": "CEST do produto",
            "example": "01.001.00"
          },
          "unidade": {
            "type": "string",
            "description": "Unidade para NFe",
            "example": "UN"
          },
          "valorUnitario": {
            "type": "number",
            "description": "Valor unitário para NFe",
            "example": 2100
          },
          "pesoLiquido": {
            "type": "number",
            "description": "Peso líquido em kg",
            "example": 2.5
          },
          "pesoBruto": {
            "type": "number",
            "description": "Peso bruto em kg",
            "example": 3
          },
          "gtin": {
            "type": "string",
            "description": "GTIN/EAN do produto",
            "example": "7891234567890"
          },
          "gtinTributavel": {
            "type": "string",
            "description": "GTIN tributável",
            "example": "7891234567890"
          }
        },
        "required": [
          "id",
          "ativo",
          "createdAt",
          "updatedAt",
          "produto",
          "quantidadeMinima",
          "quantidade",
          "dataCriacao",
          "dataAlteracao"
        ]
      },
      "UpdateProductDto": {
        "type": "object",
        "properties": {
          "produto": {
            "type": "string",
            "description": "Nome/descrição do produto",
            "example": "Notebook Dell Inspiron 15"
          },
          "unidadeMedidaId": {
            "type": "number",
            "description": "ID da unidade de medida",
            "example": 1
          },
          "codigoBarras": {
            "type": "string",
            "description": "Código de barras do produto",
            "example": "7891234567890"
          },
          "referencia": {
            "type": "string",
            "description": "Referência do produto",
            "example": "NB001"
          },
          "marcaId": {
            "type": "number",
            "description": "ID da marca",
            "example": 1
          },
          "categoriaId": {
            "type": "number",
            "description": "ID da categoria",
            "example": 1
          },
          "quantidadeMinima": {
            "type": "number",
            "description": "Quantidade mínima em estoque",
            "example": 5,
            "default": 0
          },
          "valorCompra": {
            "type": "number",
            "description": "Valor de compra do produto",
            "example": 1500
          },
          "valorVenda": {
            "type": "number",
            "description": "Valor de venda do produto",
            "example": 2100
          },
          "quantidade": {
            "type": "number",
            "description": "Quantidade atual em estoque",
            "example": 10,
            "default": 0
          },
          "percentualLucro": {
            "type": "number",
            "description": "Percentual de lucro sobre o produto",
            "example": 40
          },
          "descricao": {
            "type": "string",
            "description": "Descrição detalhada do produto",
            "example": "Notebook Dell Inspiron 15 com processador Intel i5"
          },
          "observacoes": {
            "type": "string",
            "description": "Observações sobre o produto",
            "example": "Produto em promoção até 31/12"
          },
          "situacao": {
            "type": "string",
            "description": "Data de situação do produto (formato YYYY-MM-DD)",
            "example": "2025-06-19"
          },
          "usuarioCriacao": {
            "type": "string",
            "description": "Usuário que está criando o produto",
            "example": "admin"
          },
          "codigo": {
            "type": "string",
            "description": "Código do produto para NFe",
            "example": "PROD001"
          },
          "ncm": {
            "type": "string",
            "description": "NCM do produto",
            "example": "8471.30.12"
          },
          "cest": {
            "type": "string",
            "description": "CEST do produto",
            "example": "01.001.00"
          },
          "unidade": {
            "type": "string",
            "description": "Unidade para NFe",
            "example": "UN"
          },
          "valorUnitario": {
            "type": "number",
            "description": "Valor unitário para NFe",
            "example": 2100
          },
          "pesoLiquido": {
            "type": "number",
            "description": "Peso líquido em kg",
            "example": 2.5
          },
          "pesoBruto": {
            "type": "number",
            "description": "Peso bruto em kg",
            "example": 3
          },
          "gtin": {
            "type": "string",
            "description": "GTIN/EAN do produto",
            "example": "7891234567890"
          },
          "gtinTributavel": {
            "type": "string",
            "description": "GTIN tributável",
            "example": "7891234567890"
          },
          "ativo": {
            "type": "boolean",
            "description": "Status do produto (ativo/inativo)",
            "example": true,
            "default": true
          },
          "usuarioAtualizacao": {
            "type": "string",
            "description": "Usuário que está atualizando o produto",
            "example": "admin"
          }
        }
      },
      "CreateCategoryDto": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "description": "Nome da categoria",
            "example": "Informática"
          },
          "descricao": {
            "type": "string",
            "description": "Descrição da categoria",
            "example": "Produtos de informática e tecnologia"
          },
          "ativo": {
            "type": "boolean",
            "description": "Status da categoria (ativo/inativo)",
            "example": true,
            "default": true
          }
        },
        "required": [
          "nome",
          "ativo"
        ]
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "ID único do registro",
            "example": 1
          },
          "ativo": {
            "type": "boolean",
            "description": "Status ativo/inativo do registro",
            "example": true,
            "default": true
          },
          "createdAt": {
            "type": "object",
            "description": "Data de criação do registro",
            "example": "2025-06-19T10:00:00Z"
          },
          "updatedAt": {
            "type": "object",
            "description": "Data da última atualização do registro",
            "example": "2025-06-19T10:00:00Z"
          },
          "nome": {
            "type": "string",
            "description": "Nome da categoria",
            "example": "Informática"
          },
          "descricao": {
            "type": "string",
            "description": "Descrição da categoria",
            "example": "Produtos de informática e tecnologia"
          }
        },
        "required": [
          "id",
          "ativo",
          "createdAt",
          "updatedAt",
          "nome"
        ]
      },
      "UpdateCategoryDto": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "description": "Nome da categoria",
            "example": "Informática"
          },
          "descricao": {
            "type": "string",
            "description": "Descrição da categoria",
            "example": "Produtos de informática e tecnologia"
          },
          "ativo": {
            "type": "boolean",
            "description": "Status da categoria (ativo/inativo)",
            "example": true,
            "default": true
          }
        }
      },
      "CreateBrandDto": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "description": "Nome da marca",
            "example": "Dell"
          },
          "descricao": {
            "type": "string",
            "description": "Descrição da marca",
            "example": "Marca de equipamentos de informática"
          },
          "ativo": {
            "type": "boolean",
            "description": "Status da marca (ativo/inativo)",
            "example": true,
            "default": true
          }
        },
        "required": [
          "nome",
          "ativo"
        ]
      },
      "Brand": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "ID único do registro",
            "example": 1
          },
          "ativo": {
            "type": "boolean",
            "description": "Status ativo/inativo do registro",
            "example": true,
            "default": true
          },
          "createdAt": {
            "type": "object",
            "description": "Data de criação do registro",
            "example": "2025-06-19T10:00:00Z"
          },
          "updatedAt": {
            "type": "object",
            "description": "Data da última atualização do registro",
            "example": "2025-06-19T10:00:00Z"
          },
          "nome": {
            "type": "string",
            "description": "Nome da marca",
            "example": "Dell"
          },
          "descricao": {
            "type": "string",
            "description": "Descrição da marca",
            "example": "Marca de equipamentos de informática"
          }
        },
        "required": [
          "id",
          "ativo",
          "createdAt",
          "updatedAt",
          "nome"
        ]
      },
      "UpdateBrandDto": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "description": "Nome da marca",
            "example": "Dell"
          },
          "descricao": {
            "type": "string",
            "description": "Descrição da marca",
            "example": "Marca de equipamentos de informática"
          },
          "ativo": {
            "type": "boolean",
            "description": "Status da marca (ativo/inativo)",
            "example": true,
            "default": true
          }
        }
      },
      "CreateUnitMeasureDto": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "description": "Nome da unidade de medida",
            "example": "Unidade"
          },
          "sigla": {
            "type": "string",
            "description": "Sigla da unidade de medida",
            "example": "UN"
          },
          "ativo": {
            "type": "boolean",
            "description": "Status da unidade de medida (ativo/inativo)",
            "example": true,
            "default": true
          }
        },
        "required": [
          "nome",
          "sigla",
          "ativo"
        ]
      },
      "UnitMeasure": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "ID único do registro",
            "example": 1
          },
          "ativo": {
            "type": "boolean",
            "description": "Status ativo/inativo do registro",
            "example": true,
            "default": true
          },
          "createdAt": {
            "type": "object",
            "description": "Data de criação do registro",
            "example": "2025-06-19T10:00:00Z"
          },
          "updatedAt": {
            "type": "object",
            "description": "Data da última atualização do registro",
            "example": "2025-06-19T10:00:00Z"
          },
          "unidadeMedida": {
            "type": "string",
            "description": "Código da unidade de medida",
            "example": "UNIDADE"
          },
          "nome": {
            "type": "string",
            "description": "Nome da unidade de medida",
            "example": "Unidade"
          },
          "sigla": {
            "type": "string",
            "description": "Sigla da unidade de medida",
            "example": "UN"
          }
        },
        "required": [
          "id",
          "ativo",
          "createdAt",
          "updatedAt",
          "unidadeMedida",
          "nome",
          "sigla"
        ]
      },
      "UpdateUnitMeasureDto": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "description": "Nome da unidade de medida",
            "example": "Unidade"
          },
          "sigla": {
            "type": "string",
            "description": "Sigla da unidade de medida",
            "example": "UN"
          },
          "ativo": {
            "type": "boolean",
            "description": "Status da unidade de medida (ativo/inativo)",
            "example": true,
            "default": true
          }
        }
      },
      "CreateEmployeeFunctionDto": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "description": "Nome da função do funcionário",
            "example": "Vendedor"
          },
          "descricao": {
            "type": "string",
            "description": "Descrição da função",
            "example": "Responsável por vendas e atendimento ao cliente"
          }
        },
        "required": [
          "nome"
        ]
      },
      "UpdateEmployeeFunctionDto": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "description": "Nome da função do funcionário",
            "example": "Vendedor"
          },
          "descricao": {
            "type": "string",
            "description": "Descrição da função",
            "example": "Responsável por vendas e atendimento ao cliente"
          }
        }
      },
      "CreateTransporterDto": {
        "type": "object",
        "properties": {
          "cnpj": {
            "type": "string",
            "description": "CNPJ da transportadora",
            "example": "12345678000195"
          },
          "nome": {
            "type": "string",
            "description": "Nome da transportadora",
            "example": "Transportes Rápidos Ltda"
          },
          "nomeFantasia": {
            "type": "string",
            "description": "Nome fantasia da transportadora",
            "example": "Rápidos Express"
          },
          "paisId": {
            "type": "number",
            "description": "ID do país",
            "example": 1
          },
          "estadoId": {
            "type": "number",
            "description": "ID do estado",
            "example": 1
          },
          "cidadeId": {
            "type": "number",
            "description": "ID da cidade",
            "example": 1
          },
          "endereco": {
            "type": "string",
            "description": "Endereço da transportadora",
            "example": "Av. das Transportadoras, 123"
          },
          "numero": {
            "type": "string",
            "description": "Número do endereço",
            "example": "123"
          },
          "complemento": {
            "type": "string",
            "description": "Complemento do endereço",
            "example": "Galpão 5"
          },
          "bairro": {
            "type": "string",
            "description": "Bairro",
            "example": "Distrito Industrial"
          },
          "cep": {
            "type": "string",
            "description": "CEP",
            "example": "12345-678"
          },
          "website": {
            "type": "string",
            "description": "Website da transportadora",
            "example": "https://www.rapidosexpress.com.br"
          },
          "observacoes": {
            "type": "string",
            "description": "Observações sobre a transportadora",
            "example": "Especializada em cargas frágeis"
          }
        },
        "required": [
          "cnpj",
          "nome"
        ]
      },
      "UpdateTransporterDto": {
        "type": "object",
        "properties": {
          "cnpj": {
            "type": "string",
            "description": "CNPJ da transportadora",
            "example": "12345678000195"
          },
          "nome": {
            "type": "string",
            "description": "Nome da transportadora",
            "example": "Transportes Rápidos Ltda"
          },
          "nomeFantasia": {
            "type": "string",
            "description": "Nome fantasia da transportadora",
            "example": "Rápidos Express"
          },
          "paisId": {
            "type": "number",
            "description": "ID do país",
            "example": 1
          },
          "estadoId": {
            "type": "number",
            "description": "ID do estado",
            "example": 1
          },
          "cidadeId": {
            "type": "number",
            "description": "ID da cidade",
            "example": 1
          },
          "endereco": {
            "type": "string",
            "description": "Endereço da transportadora",
            "example": "Av. das Transportadoras, 123"
          },
          "numero": {
            "type": "string",
            "description": "Número do endereço",
            "example": "123"
          },
          "complemento": {
            "type": "string",
            "description": "Complemento do endereço",
            "example": "Galpão 5"
          },
          "bairro": {
            "type": "string",
            "description": "Bairro",
            "example": "Distrito Industrial"
          },
          "cep": {
            "type": "string",
            "description": "CEP",
            "example": "12345-678"
          },
          "website": {
            "type": "string",
            "description": "Website da transportadora",
            "example": "https://www.rapidosexpress.com.br"
          },
          "observacoes": {
            "type": "string",
            "description": "Observações sobre a transportadora",
            "example": "Especializada em cargas frágeis"
          }
        }
      },
      "CreateVehicleDto": {
        "type": "object",
        "properties": {
          "placa": {
            "type": "string",
            "description": "Placa do veículo",
            "example": "ABC-1234"
          },
          "marca": {
            "type": "string",
            "description": "Marca do veículo",
            "example": "Volvo"
          },
          "modelo": {
            "type": "string",
            "description": "Modelo do veículo",
            "example": "FH 540"
          },
          "ano": {
            "type": "number",
            "description": "Ano de fabricação",
            "example": 2020
          },
          "cor": {
            "type": "string",
            "description": "Cor do veículo",
            "example": "Branco"
          },
          "tipo": {
            "type": "string",
            "description": "Tipo do veículo",
            "example": "CAMINHAO",
            "enum": [
              "CAMINHAO",
              "VAN",
              "CARRETA",
              "UTILITARIO",
              "OUTROS"
            ]
          },
          "capacidadeCarga": {
            "type": "number",
            "description": "Capacidade de carga em kg",
            "example": 15000
          },
          "observacoes": {
            "type": "string",
            "description": "Observações sobre o veículo",
            "example": "Veículo com baú refrigerado"
          }
        },
        "required": [
          "placa",
          "marca",
          "modelo",
          "ano",
          "tipo"
        ]
      },
      "UpdateVehicleDto": {
        "type": "object",
        "properties": {
          "placa": {
            "type": "string",
            "description": "Placa do veículo",
            "example": "ABC-1234"
          },
          "marca": {
            "type": "string",
            "description": "Marca do veículo",
            "example": "Volvo"
          },
          "modelo": {
            "type": "string",
            "description": "Modelo do veículo",
            "example": "FH 540"
          },
          "ano": {
            "type": "number",
            "description": "Ano de fabricação",
            "example": 2020
          },
          "cor": {
            "type": "string",
            "description": "Cor do veículo",
            "example": "Branco"
          },
          "tipo": {
            "type": "string",
            "description": "Tipo do veículo",
            "example": "CAMINHAO",
            "enum": [
              "CAMINHAO",
              "VAN",
              "CARRETA",
              "UTILITARIO",
              "OUTROS"
            ]
          },
          "capacidadeCarga": {
            "type": "number",
            "description": "Capacidade de carga em kg",
            "example": 15000
          },
          "observacoes": {
            "type": "string",
            "description": "Observações sobre o veículo",
            "example": "Veículo com baú refrigerado"
          }
        }
      },
      "CreatePurchaseItemDto": {
        "type": "object",
        "properties": {
          "produtoId": {
            "type": "number",
            "description": "ID do produto",
            "example": 1
          },
          "quantidade": {
            "type": "number",
            "description": "Quantidade do produto",
            "example": 10
          },
          "precoUn": {
            "type": "number",
            "description": "Preço unitário do produto",
            "example": 100.5
          },
          "descUn": {
            "type": "number",
            "description": "Desconto unitário aplicado ao produto",
            "example": 5,
            "default": 0
          },
          "liquidoUn": {
            "type": "number",
            "description": "Valor líquido unitário (preço - desconto)",
            "example": 95.5
          },
          "total": {
            "type": "number",
            "description": "Valor total do item (quantidade * líquido unitário)",
            "example": 955
          },
          "rateio": {
            "type": "number",
            "description": "Valor de rateio de despesas",
            "example": 10,
            "default": 0
          },
          "custoFinalUn": {
            "type": "number",
            "description": "Custo final unitário (líquido + rateio / quantidade)",
            "example": 96.5
          },
          "custoFinal": {
            "type": "number",
            "description": "Custo final total (custo final unitário * quantidade)",
            "example": 965
          },
          "quantidadeRecebida": {
            "type": "number",
            "description": "Quantidade recebida do item",
            "example": 0,
            "default": 0
          },
          "dataEntregaItem": {
            "format": "date-time",
            "type": "string",
            "description": "Data de entrega do item",
            "example": "2024-02-20"
          },
          "observacoes": {
            "type": "string",
            "description": "Observações sobre o item",
            "example": "Item com defeito"
          }
        },
        "required": [
          "produtoId",
          "quantidade",
          "precoUn",
          "descUn",
          "rateio"
        ]
      },
      "CreatePurchaseInstallmentDto": {
        "type": "object",
        "properties": {
          "parcela": {
            "type": "number",
            "description": "Número da parcela",
            "example": 1
          },
          "codigoFormaPagto": {
            "type": "string",
            "description": "Código da forma de pagamento",
            "example": "DIN"
          },
          "formaPagamentoId": {
            "type": "number",
            "description": "ID da forma de pagamento",
            "example": 1
          },
          "dataVencimento": {
            "format": "date-time",
            "type": "string",
            "description": "Data de vencimento da parcela",
            "example": "2024-02-15"
          },
          "valorParcela": {
            "type": "number",
            "description": "Valor da parcela",
            "example": 720
          }
        },
        "required": [
          "parcela",
          "formaPagamentoId",
          "dataVencimento",
          "valorParcela"
        ]
      },
      "CreatePurchaseDto": {
        "type": "object",
        "properties": {
          "numeroPedido": {
            "type": "string",
            "description": "Número do pedido/nota fiscal",
            "example": "1"
          },
          "modelo": {
            "type": "string",
            "description": "Modelo da nota fiscal",
            "example": "55"
          },
          "serie": {
            "type": "string",
            "description": "Série da nota fiscal",
            "example": "1"
          },
          "fornecedorId": {
            "type": "number",
            "description": "ID do fornecedor",
            "example": 1
          },
          "numeroNota": {
            "type": "string",
            "description": "Número da nota fiscal",
            "example": "12345"
          },
          "dataEmissao": {
            "format": "date-time",
            "type": "string",
            "description": "Data de emissão da compra",
            "example": "2024-01-15"
          },
          "dataChegada": {
            "format": "date-time",
            "type": "string",
            "description": "Data de chegada prevista",
            "example": "2024-02-15"
          },
          "dataEntregaRealizada": {
            "format": "date-time",
            "type": "string",
            "description": "Data de entrega realizada",
            "example": "2024-02-15"
          },
          "condicaoPagamentoId": {
            "type": "number",
            "description": "ID da condição de pagamento",
            "example": 1
          },
          "formaPagamentoId": {
            "type": "number",
            "description": "ID da forma de pagamento",
            "example": 1
          },
          "funcionarioId": {
            "type": "number",
            "description": "ID do funcionário responsável pela compra",
            "example": 1
          },
          "status": {
            "type": "string",
            "description": "Status da compra",
            "example": "PENDENTE",
            "enum": [
              "PENDENTE",
              "APROVADO",
              "ENVIADO",
              "RECEBIDO",
              "CANCELADO"
            ],
            "default": "PENDENTE"
          },
          "tipoFrete": {
            "type": "string",
            "description": "Tipo de frete",
            "example": "CIF",
            "enum": [
              "CIF",
              "FOB"
            ],
            "default": "CIF"
          },
          "transportadoraId": {
            "type": "number",
            "description": "ID da transportadora",
            "example": 1
          },
          "valorFrete": {
            "type": "number",
            "description": "Valor do frete",
            "example": 50,
            "default": 0
          },
          "valorSeguro": {
            "type": "number",
            "description": "Valor do seguro",
            "example": 25,
            "default": 0
          },
          "outrasDespesas": {
            "type": "number",
            "description": "Outras despesas",
            "example": 15,
            "default": 0
          },
          "valorDesconto": {
            "type": "number",
            "description": "Valor de desconto aplicado",
            "example": 50,
            "default": 0
          },
          "valorAcrescimo": {
            "type": "number",
            "description": "Valor de acréscimo aplicado",
            "example": 10,
            "default": 0
          },
          "observacoes": {
            "type": "string",
            "description": "Observações sobre a compra",
            "example": "Compra de materiais de escritório"
          },
          "aprovadoPor": {
            "type": "number",
            "description": "ID do funcionário que aprovou a compra",
            "example": 1
          },
          "dataAprovacao": {
            "format": "date-time",
            "type": "string",
            "description": "Data de aprovação da compra",
            "example": "2024-01-16"
          },
          "itens": {
            "description": "Itens da compra",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreatePurchaseItemDto"
            }
          },
          "parcelas": {
            "description": "Parcelas da compra",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreatePurchaseInstallmentDto"
            }
          }
        },
        "required": [
          "numeroPedido",
          "modelo",
          "serie",
          "fornecedorId",
          "dataEmissao",
          "condicaoPagamentoId",
          "status",
          "tipoFrete",
          "valorFrete",
          "valorSeguro",
          "outrasDespesas",
          "valorDesconto",
          "valorAcrescimo"
        ]
      },
      "UpdatePurchaseDto": {
        "type": "object",
        "properties": {
          "numeroPedido": {
            "type": "string",
            "description": "Número do pedido/nota fiscal",
            "example": "1"
          },
          "modelo": {
            "type": "string",
            "description": "Modelo da nota fiscal",
            "example": "55"
          },
          "serie": {
            "type": "string",
            "description": "Série da nota fiscal",
            "example": "1"
          },
          "fornecedorId": {
            "type": "number",
            "description": "ID do fornecedor",
            "example": 1
          },
          "numeroNota": {
            "type": "string",
            "description": "Número da nota fiscal",
            "example": "12345"
          },
          "dataEmissao": {
            "format": "date-time",
            "type": "string",
            "description": "Data de emissão da compra",
            "example": "2024-01-15"
          },
          "dataChegada": {
            "format": "date-time",
            "type": "string",
            "description": "Data de chegada prevista",
            "example": "2024-02-15"
          },
          "dataEntregaRealizada": {
            "format": "date-time",
            "type": "string",
            "description": "Data de entrega realizada",
            "example": "2024-02-15"
          },
          "condicaoPagamentoId": {
            "type": "number",
            "description": "ID da condição de pagamento",
            "example": 1
          },
          "formaPagamentoId": {
            "type": "number",
            "description": "ID da forma de pagamento",
            "example": 1
          },
          "funcionarioId": {
            "type": "number",
            "description": "ID do funcionário responsável pela compra",
            "example": 1
          },
          "status": {
            "type": "string",
            "description": "Status da compra",
            "example": "PENDENTE",
            "enum": [
              "PENDENTE",
              "APROVADO",
              "ENVIADO",
              "RECEBIDO",
              "CANCELADO"
            ],
            "default": "PENDENTE"
          },
          "tipoFrete": {
            "type": "string",
            "description": "Tipo de frete",
            "example": "CIF",
            "enum": [
              "CIF",
              "FOB"
            ],
            "default": "CIF"
          },
          "transportadoraId": {
            "type": "number",
            "description": "ID da transportadora",
            "example": 1
          },
          "valorFrete": {
            "type": "number",
            "description": "Valor do frete",
            "example": 50,
            "default": 0
          },
          "valorSeguro": {
            "type": "number",
            "description": "Valor do seguro",
            "example": 25,
            "default": 0
          },
          "outrasDespesas": {
            "type": "number",
            "description": "Outras despesas",
            "example": 15,
            "default": 0
          },
          "valorDesconto": {
            "type": "number",
            "description": "Valor de desconto aplicado",
            "example": 50,
            "default": 0
          },
          "valorAcrescimo": {
            "type": "number",
            "description": "Valor de acréscimo aplicado",
            "example": 10,
            "default": 0
          },
          "observacoes": {
            "type": "string",
            "description": "Observações sobre a compra",
            "example": "Compra de materiais de escritório"
          },
          "aprovadoPor": {
            "type": "number",
            "description": "ID do funcionário que aprovou a compra",
            "example": 1
          },
          "dataAprovacao": {
            "format": "date-time",
            "type": "string",
            "description": "Data de aprovação da compra",
            "example": "2024-01-16"
          },
          "itens": {
            "description": "Itens da compra",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreatePurchaseItemDto"
            }
          },
          "parcelas": {
            "description": "Parcelas da compra",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreatePurchaseInstallmentDto"
            }
          }
        }
      },
      "CreateSaleItemDto": {
        "type": "object",
        "properties": {
          "produtoId": {
            "type": "number",
            "description": "ID do produto",
            "example": 1
          },
          "quantidade": {
            "type": "number",
            "description": "Quantidade do produto",
            "example": 10
          },
          "precoUn": {
            "type": "number",
            "description": "Preço unitário do produto",
            "example": 100.5
          },
          "descUn": {
            "type": "number",
            "description": "Desconto unitário aplicado ao produto",
            "example": 5,
            "default": 0
          },
          "liquidoUn": {
            "type": "number",
            "description": "Valor líquido unitário (preço - desconto)",
            "example": 95.5
          },
          "total": {
            "type": "number",
            "description": "Valor total do item (quantidade * líquido unitário)",
            "example": 955
          },
          "rateio": {
            "type": "number",
            "description": "Valor de rateio de despesas",
            "example": 10,
            "default": 0
          },
          "custoFinalUn": {
            "type": "number",
            "description": "Custo final unitário (líquido + rateio / quantidade)",
            "example": 96.5
          },
          "custoFinal": {
            "type": "number",
            "description": "Custo final total (custo final unitário * quantidade)",
            "example": 965
          },
          "quantidadeEntregue": {
            "type": "number",
            "description": "Quantidade entregue do item",
            "example": 0,
            "default": 0
          },
          "dataEntregaItem": {
            "format": "date-time",
            "type": "string",
            "description": "Data de entrega do item",
            "example": "2024-02-20"
          },
          "observacoes": {
            "type": "string",
            "description": "Observações sobre o item",
            "example": "Produto com garantia estendida"
          }
        },
        "required": [
          "produtoId",
          "quantidade",
          "precoUn",
          "descUn",
          "rateio"
        ]
      },
      "CreateSaleInstallmentDto": {
        "type": "object",
        "properties": {
          "parcela": {
            "type": "number",
            "description": "Número da parcela",
            "example": 1
          },
          "codigoFormaPagto": {
            "type": "string",
            "description": "Código da forma de pagamento",
            "example": "DIN"
          },
          "formaPagamentoId": {
            "type": "number",
            "description": "ID da forma de pagamento",
            "example": 1
          },
          "dataVencimento": {
            "format": "date-time",
            "type": "string",
            "description": "Data de vencimento da parcela",
            "example": "2024-02-15"
          },
          "valorParcela": {
            "type": "number",
            "description": "Valor da parcela",
            "example": 720
          }
        },
        "required": [
          "parcela",
          "formaPagamentoId",
          "dataVencimento",
          "valorParcela"
        ]
      },
      "CreateSaleDto": {
        "type": "object",
        "properties": {
          "numeroPedido": {
            "type": "string",
            "description": "Número do pedido/nota fiscal",
            "example": "1"
          },
          "modelo": {
            "type": "string",
            "description": "Modelo da nota fiscal",
            "example": "55"
          },
          "serie": {
            "type": "string",
            "description": "Série da nota fiscal",
            "example": "1"
          },
          "clienteId": {
            "type": "number",
            "description": "ID do cliente",
            "example": 1
          },
          "numeroNota": {
            "type": "string",
            "description": "Número da nota fiscal",
            "example": "12345"
          },
          "dataEmissao": {
            "format": "date-time",
            "type": "string",
            "description": "Data de emissão da venda",
            "example": "2024-01-15"
          },
          "dataEntrega": {
            "format": "date-time",
            "type": "string",
            "description": "Data de entrega prevista",
            "example": "2024-02-15"
          },
          "dataEntregaRealizada": {
            "format": "date-time",
            "type": "string",
            "description": "Data de entrega realizada",
            "example": "2024-02-15"
          },
          "condicaoPagamentoId": {
            "type": "number",
            "description": "ID da condição de pagamento",
            "example": 1
          },
          "formaPagamentoId": {
            "type": "number",
            "description": "ID da forma de pagamento",
            "example": 1
          },
          "funcionarioId": {
            "type": "number",
            "description": "ID do funcionário responsável pela venda",
            "example": 1
          },
          "status": {
            "type": "string",
            "description": "Status da venda",
            "example": "PENDENTE",
            "enum": [
              "PENDENTE",
              "APROVADO",
              "ENVIADO",
              "ENTREGUE",
              "CANCELADO"
            ],
            "default": "PENDENTE"
          },
          "tipoFrete": {
            "type": "string",
            "description": "Tipo de frete",
            "example": "CIF",
            "enum": [
              "CIF",
              "FOB"
            ],
            "default": "CIF"
          },
          "transportadoraId": {
            "type": "number",
            "description": "ID da transportadora",
            "example": 1
          },
          "valorFrete": {
            "type": "number",
            "description": "Valor do frete",
            "example": 50,
            "default": 0
          },
          "valorSeguro": {
            "type": "number",
            "description": "Valor do seguro",
            "example": 25,
            "default": 0
          },
          "outrasDespesas": {
            "type": "number",
            "description": "Outras despesas",
            "example": 15,
            "default": 0
          },
          "valorDesconto": {
            "type": "number",
            "description": "Valor de desconto aplicado",
            "example": 50,
            "default": 0
          },
          "valorAcrescimo": {
            "type": "number",
            "description": "Valor de acréscimo aplicado",
            "example": 10,
            "default": 0
          },
          "observacoes": {
            "type": "string",
            "description": "Observações sobre a venda",
            "example": "Venda de produtos eletrônicos"
          },
          "aprovadoPor": {
            "type": "number",
            "description": "ID do funcionário que aprovou a venda",
            "example": 1
          },
          "dataAprovacao": {
            "format": "date-time",
            "type": "string",
            "description": "Data de aprovação da venda",
            "example": "2024-01-16"
          },
          "itens": {
            "description": "Itens da venda",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateSaleItemDto"
            }
          },
          "parcelas": {
            "description": "Parcelas da venda",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateSaleInstallmentDto"
            }
          }
        },
        "required": [
          "numeroPedido",
          "modelo",
          "serie",
          "clienteId",
          "dataEmissao",
          "condicaoPagamentoId",
          "status",
          "tipoFrete",
          "valorFrete",
          "valorSeguro",
          "outrasDespesas",
          "valorDesconto",
          "valorAcrescimo"
        ]
      },
      "UpdateSaleDto": {
        "type": "object",
        "properties": {
          "numeroPedido": {
            "type": "string",
            "description": "Número do pedido/nota fiscal",
            "example": "1"
          },
          "modelo": {
            "type": "string",
            "description": "Modelo da nota fiscal",
            "example": "55"
          },
          "serie": {
            "type": "string",
            "description": "Série da nota fiscal",
            "example": "1"
          },
          "clienteId": {
            "type": "number",
            "description": "ID do cliente",
            "example": 1
          },
          "numeroNota": {
            "type": "string",
            "description": "Número da nota fiscal",
            "example": "12345"
          },
          "dataEmissao": {
            "format": "date-time",
            "type": "string",
            "description": "Data de emissão da venda",
            "example": "2024-01-15"
          },
          "dataEntrega": {
            "format": "date-time",
            "type": "string",
            "description": "Data de entrega prevista",
            "example": "2024-02-15"
          },
          "dataEntregaRealizada": {
            "format": "date-time",
            "type": "string",
            "description": "Data de entrega realizada",
            "example": "2024-02-15"
          },
          "condicaoPagamentoId": {
            "type": "number",
            "description": "ID da condição de pagamento",
            "example": 1
          },
          "formaPagamentoId": {
            "type": "number",
            "description": "ID da forma de pagamento",
            "example": 1
          },
          "funcionarioId": {
            "type": "number",
            "description": "ID do funcionário responsável pela venda",
            "example": 1
          },
          "status": {
            "type": "string",
            "description": "Status da venda",
            "example": "PENDENTE",
            "enum": [
              "PENDENTE",
              "APROVADO",
              "ENVIADO",
              "ENTREGUE",
              "CANCELADO"
            ],
            "default": "PENDENTE"
          },
          "tipoFrete": {
            "type": "string",
            "description": "Tipo de frete",
            "example": "CIF",
            "enum": [
              "CIF",
              "FOB"
            ],
            "default": "CIF"
          },
          "transportadoraId": {
            "type": "number",
            "description": "ID da transportadora",
            "example": 1
          },
          "valorFrete": {
            "type": "number",
            "description": "Valor do frete",
            "example": 50,
            "default": 0
          },
          "valorSeguro": {
            "type": "number",
            "description": "Valor do seguro",
            "example": 25,
            "default": 0
          },
          "outrasDespesas": {
            "type": "number",
            "description": "Outras despesas",
            "example": 15,
            "default": 0
          },
          "valorDesconto": {
            "type": "number",
            "description": "Valor de desconto aplicado",
            "example": 50,
            "default": 0
          },
          "valorAcrescimo": {
            "type": "number",
            "description": "Valor de acréscimo aplicado",
            "example": 10,
            "default": 0
          },
          "observacoes": {
            "type": "string",
            "description": "Observações sobre a venda",
            "example": "Venda de produtos eletrônicos"
          },
          "aprovadoPor": {
            "type": "number",
            "description": "ID do funcionário que aprovou a venda",
            "example": 1
          },
          "dataAprovacao": {
            "format": "date-time",
            "type": "string",
            "description": "Data de aprovação da venda",
            "example": "2024-01-16"
          },
          "itens": {
            "description": "Itens da venda",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateSaleItemDto"
            }
          },
          "parcelas": {
            "description": "Parcelas da venda",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateSaleInstallmentDto"
            }
          }
        }
      }
    }
  }
}